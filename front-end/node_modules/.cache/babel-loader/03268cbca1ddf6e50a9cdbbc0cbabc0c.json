{"ast":null,"code":"'use strict';\n\nconst {\n  CID\n} = require('multiformats/cid');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink(cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [`${cid}`, // @ts-ignore loose types\n        dLink.Name || dLink.name || null],\n        ...options\n      }),\n      headers: options.headers\n    });\n    const {\n      Hash\n    } = await res.json();\n    return CID.parse(Hash);\n  }\n\n  return rmLink;\n});","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-http-client/src/object/patch/rm-link.js"],"names":["CID","require","configure","toUrlSearchParams","module","exports","api","rmLink","cid","dLink","options","res","post","timeout","signal","searchParams","arg","Name","name","headers","Hash","json","parse"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAUC,OAAO,CAAC,kBAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,MAAf,CAAuBC,GAAvB,EAA4BC,KAA5B,EAAmCC,OAAO,GAAG,EAA7C,EAAiD;AAC/C,UAAMC,GAAG,GAAG,MAAML,GAAG,CAACM,IAAJ,CAAS,sBAAT,EAAiC;AACjDC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADgC;AAEjDC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFiC;AAGjDC,MAAAA,YAAY,EAAEZ,iBAAiB,CAAC;AAC9Ba,QAAAA,GAAG,EAAE,CACF,GAAER,GAAI,EADJ,EAEH;AACAC,QAAAA,KAAK,CAACQ,IAAN,IAAcR,KAAK,CAACS,IAApB,IAA4B,IAHzB,CADyB;AAM9B,WAAGR;AAN2B,OAAD,CAHkB;AAWjDS,MAAAA,OAAO,EAAET,OAAO,CAACS;AAXgC,KAAjC,CAAlB;AAcA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMT,GAAG,CAACU,IAAJ,EAAvB;AAEA,WAAOrB,GAAG,CAACsB,KAAJ,CAAUF,IAAV,CAAP;AACD;;AACD,SAAOb,MAAP;AACD,CAxByB,CAA1B","sourcesContent":["'use strict'\n\nconst { CID } = require('multiformats/cid')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/object/patch').API<HTTPClientExtraOptions>} ObjectPatchAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ObjectPatchAPI[\"rmLink\"]}\n   */\n  async function rmLink (cid, dLink, options = {}) {\n    const res = await api.post('object/patch/rm-link', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: [\n          `${cid}`,\n          // @ts-ignore loose types\n          dLink.Name || dLink.name || null\n        ],\n        ...options\n      }),\n      headers: options.headers\n    })\n\n    const { Hash } = await res.json()\n\n    return CID.parse(Hash)\n  }\n  return rmLink\n})\n"]},"metadata":{},"sourceType":"script"}