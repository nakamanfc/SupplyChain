{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n\nconst {\n  Multiaddr\n} = require('multiaddr');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = ({\n  repo\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"list\"]}\n   */\n  async function list(options = {}) {\n    /** @type {string[]|null} */\n    const peers = await repo.config.get('Bootstrap', options);\n    return {\n      Peers: (peers || []).map(ma => new Multiaddr(ma))\n    };\n  }\n\n  return withTimeoutOption(list);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/bootstrap/list.js"],"names":["withTimeoutOption","require","Multiaddr","module","exports","repo","list","options","peers","config","get","Peers","map","ma"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAgBD,OAAO,CAAC,WAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AACAE,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B;AACF;AACA;AACE,iBAAeC,IAAf,CAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC;AACA,UAAMC,KAAK,GAAI,MAAMH,IAAI,CAACI,MAAL,CAAYC,GAAZ,CAAgB,WAAhB,EAA6BH,OAA7B,CAArB;AACA,WAAO;AAAEI,MAAAA,KAAK,EAAE,CAACH,KAAK,IAAI,EAAV,EAAcI,GAAd,CAAkBC,EAAE,IAAI,IAAIX,SAAJ,CAAcW,EAAd,CAAxB;AAAT,KAAP;AACD;;AAED,SAAOb,iBAAiB,CAACM,IAAD,CAAxB;AACD,CAXD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\nconst { Multiaddr } = require('multiaddr')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/bootstrap').API[\"list\"]}\n   */\n  async function list (options = {}) {\n    /** @type {string[]|null} */\n    const peers = (await repo.config.get('Bootstrap', options))\n    return { Peers: (peers || []).map(ma => new Multiaddr(ma)) }\n  }\n\n  return withTimeoutOption(list)\n}\n"]},"metadata":{},"sourceType":"script"}