{"ast":null,"code":"'use strict';\n\nconst getTime = require('./time');\n\nclass Retimer {\n  constructor(callback, timeout, args) {\n    const that = this;\n    this._started = getTime();\n    this._rescheduled = 0;\n    this._scheduled = timeout;\n    this._args = args;\n    this._triggered = false;\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started);\n\n        that._schedule(that._scheduled);\n      } else {\n        that._triggered = true;\n        callback.apply(null, that._args);\n      }\n    };\n\n    this._timer = setTimeout(this._timerWrapper, timeout);\n  }\n\n  reschedule(timeout) {\n    if (!timeout) {\n      timeout = this._scheduled;\n    }\n\n    const now = getTime();\n\n    if (now + timeout - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer);\n\n      this._schedule(timeout);\n    } else if (!this._triggered) {\n      this._started = now;\n      this._rescheduled = timeout;\n    } else {\n      this._schedule(timeout);\n    }\n  }\n\n  _schedule(timeout) {\n    this._triggered = false;\n    this._started = getTime();\n    this._rescheduled = 0;\n    this._scheduled = timeout;\n    this._timer = setTimeout(this._timerWrapper, timeout);\n  }\n\n  clear() {\n    clearTimeout(this._timer);\n  }\n\n}\n\nfunction retimer() {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed');\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed');\n  }\n\n  let args;\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2);\n    /* eslint-disable no-var */\n\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2];\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args);\n}\n\nmodule.exports = retimer;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/libp2p/node_modules/retimer/retimer.js"],"names":["getTime","require","Retimer","constructor","callback","timeout","args","that","_started","_rescheduled","_scheduled","_args","_triggered","_timerWrapper","_schedule","apply","_timer","setTimeout","reschedule","now","clearTimeout","clear","retimer","arguments","Error","length","Array","i","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst getTime = require('./time')\n\nclass Retimer {\n  constructor (callback, timeout, args) {\n    const that = this\n\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._args = args\n    this._triggered = false\n\n    this._timerWrapper = () => {\n      if (that._rescheduled > 0) {\n        that._scheduled = that._rescheduled - (getTime() - that._started)\n        that._schedule(that._scheduled)\n      } else {\n        that._triggered = true\n        callback.apply(null, that._args)\n      }\n    }\n\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  reschedule (timeout) {\n    if (!timeout) {\n      timeout = this._scheduled\n    }\n    const now = getTime()\n    if ((now + timeout) - (this._started + this._scheduled) < 0) {\n      clearTimeout(this._timer)\n      this._schedule(timeout)\n    } else if (!this._triggered) {\n      this._started = now\n      this._rescheduled = timeout\n    } else {\n      this._schedule(timeout)\n    }\n  }\n\n  _schedule (timeout) {\n    this._triggered = false\n    this._started = getTime()\n    this._rescheduled = 0\n    this._scheduled = timeout\n    this._timer = setTimeout(this._timerWrapper, timeout)\n  }\n\n  clear () {\n    clearTimeout(this._timer)\n  }\n}\n\nfunction retimer () {\n  if (typeof arguments[0] !== 'function') {\n    throw new Error('callback needed')\n  }\n\n  if (typeof arguments[1] !== 'number') {\n    throw new Error('timeout needed')\n  }\n\n  let args\n\n  if (arguments.length > 0) {\n    args = new Array(arguments.length - 2)\n\n    /* eslint-disable no-var */\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i + 2]\n    }\n  }\n\n  return new Retimer(arguments[0], arguments[1], args)\n}\n\nmodule.exports = retimer\n"]},"metadata":{},"sourceType":"script"}