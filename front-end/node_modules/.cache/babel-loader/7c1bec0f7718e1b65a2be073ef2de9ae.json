{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = ({\n  repo\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"stat\"]}\n   */\n  async function stat(options = {}) {\n    const stats = await repo.stat();\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    };\n  }\n\n  return withTimeoutOption(stat);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/repo/stat.js"],"names":["withTimeoutOption","require","module","exports","repo","stat","options","stats","numObjects","BigInt","toString","repoSize","repoPath","version","storageMax"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B;AACF;AACA;AACE,iBAAeC,IAAf,CAAqBC,OAAO,GAAG,EAA/B,EAAmC;AACjC,UAAMC,KAAK,GAAG,MAAMH,IAAI,CAACC,IAAL,EAApB;AAEA,WAAO;AACLG,MAAAA,UAAU,EAAEC,MAAM,CAACF,KAAK,CAACC,UAAN,CAAiBE,QAAjB,EAAD,CADb;AAELC,MAAAA,QAAQ,EAAEF,MAAM,CAACF,KAAK,CAACI,QAAN,CAAeD,QAAf,EAAD,CAFX;AAGLE,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAHX;AAILC,MAAAA,OAAO,EAAG,GAAEN,KAAK,CAACM,OAAQ,EAJrB;AAKLC,MAAAA,UAAU,EAAEL,MAAM,CAACF,KAAK,CAACO,UAAN,CAAiBJ,QAAjB,EAAD;AALb,KAAP;AAOD;;AAED,SAAOV,iBAAiB,CAACK,IAAD,CAAxB;AACD,CAjBD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = ({ repo }) => {\n  /**\n   * @type {import('ipfs-core-types/src/repo').API[\"stat\"]}\n   */\n  async function stat (options = {}) {\n    const stats = await repo.stat()\n\n    return {\n      numObjects: BigInt(stats.numObjects.toString()),\n      repoSize: BigInt(stats.repoSize.toString()),\n      repoPath: stats.repoPath,\n      version: `${stats.version}`,\n      storageMax: BigInt(stats.storageMax.toString())\n    }\n  }\n\n  return withTimeoutOption(stat)\n}\n"]},"metadata":{},"sourceType":"script"}