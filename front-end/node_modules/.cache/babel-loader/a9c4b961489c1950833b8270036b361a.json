{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\n\nvar extractDataFromBlock = require('../utils/extract-data-from-block.js');\n\nvar validateOffsetAndLength = require('../utils/validate-offset-and-length.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {\n      offset,\n      length\n    } = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n\n  return contentGenerator;\n};\n\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode__default['default'](new Error(`No link named ${path} found in raw node ${cid}`), 'ERR_NOT_FOUND');\n  }\n\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\n\nmodule.exports = resolve;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-unixfs-exporter/cjs/src/resolvers/raw.js"],"names":["errCode","require","extractDataFromBlock","validateOffsetAndLength","_interopDefaultLegacy","e","errCode__default","rawContent","node","contentGenerator","options","offset","length","resolve","cid","name","path","toResolve","depth","blockstore","Error","block","get","entry","type","content","size","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,oBAAoB,GAAGD,OAAO,CAAC,qCAAD,CAAlC;;AACA,IAAIE,uBAAuB,GAAGF,OAAO,CAAC,wCAAD,CAArC;;AAEA,SAASG,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,gBAAgB,GAAG,aAAaF,qBAAqB,CAACJ,OAAD,CAAzD;;AAEA,MAAMO,UAAU,GAAGC,IAAI,IAAI;AACzB,kBAAgBC,gBAAhB,CAAiCC,OAAO,GAAG,EAA3C,EAA+C;AAC7C,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmBT,uBAAuB,CAACK,IAAI,CAACI,MAAN,EAAcF,OAAO,CAACC,MAAtB,EAA8BD,OAAO,CAACE,MAAtC,CAAhD;AACA,UAAMV,oBAAoB,CAACM,IAAD,EAAO,CAAP,EAAUG,MAAV,EAAkBA,MAAM,GAAGC,MAA3B,CAA1B;AACD;;AACD,SAAOH,gBAAP;AACD,CAND;;AAOA,MAAMI,OAAO,GAAG,OAAOC,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB,EAAwBC,SAAxB,EAAmCJ,OAAnC,EAA4CK,KAA5C,EAAmDC,UAAnD,EAA+DT,OAA/D,KAA2E;AACzF,MAAIO,SAAS,CAACL,MAAd,EAAsB;AACpB,UAAMN,gBAAgB,CAAC,SAAD,CAAhB,CAA4B,IAAIc,KAAJ,CAAW,iBAAiBJ,IAAM,sBAAsBF,GAAK,EAA7D,CAA5B,EAA6F,eAA7F,CAAN;AACD;;AACD,QAAMO,KAAK,GAAG,MAAMF,UAAU,CAACG,GAAX,CAAeR,GAAf,EAAoBJ,OAApB,CAApB;AACA,SAAO;AACLa,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,KADD;AAELT,MAAAA,IAFK;AAGLC,MAAAA,IAHK;AAILF,MAAAA,GAJK;AAKLW,MAAAA,OAAO,EAAElB,UAAU,CAACc,KAAD,CALd;AAMLH,MAAAA,KANK;AAOLQ,MAAAA,IAAI,EAAEL,KAAK,CAACT,MAPP;AAQLJ,MAAAA,IAAI,EAAEa;AARD;AADF,GAAP;AAYD,CAjBD;;AAmBAM,MAAM,CAACC,OAAP,GAAiBf,OAAjB","sourcesContent":["'use strict';\n\nvar errCode = require('err-code');\nvar extractDataFromBlock = require('../utils/extract-data-from-block.js');\nvar validateOffsetAndLength = require('../utils/validate-offset-and-length.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nconst rawContent = node => {\n  async function* contentGenerator(options = {}) {\n    const {offset, length} = validateOffsetAndLength(node.length, options.offset, options.length);\n    yield extractDataFromBlock(node, 0, offset, offset + length);\n  }\n  return contentGenerator;\n};\nconst resolve = async (cid, name, path, toResolve, resolve, depth, blockstore, options) => {\n  if (toResolve.length) {\n    throw errCode__default['default'](new Error(`No link named ${ path } found in raw node ${ cid }`), 'ERR_NOT_FOUND');\n  }\n  const block = await blockstore.get(cid, options);\n  return {\n    entry: {\n      type: 'raw',\n      name,\n      path,\n      cid,\n      content: rawContent(block),\n      depth,\n      size: block.length,\n      node: block\n    }\n  };\n};\n\nmodule.exports = resolve;\n"]},"metadata":{},"sourceType":"script"}