{"ast":null,"code":"'use strict';\n\nconst toCamel = require('../../lib/object-to-camel');\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state(options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    }); // @ts-ignore server output is not typed\n\n    return toCamel(await res.json());\n  }\n\n  return state;\n});","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-http-client/src/name/pubsub/state.js"],"names":["toCamel","require","configure","toUrlSearchParams","module","exports","api","state","options","res","post","timeout","signal","searchParams","headers","json"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,2BAAD,CAAvB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAG,MAAM,CAACC,OAAP,GAAiBH,SAAS,CAACI,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,KAAf,CAAsBC,OAAO,GAAG,EAAhC,EAAoC;AAClC,UAAMC,GAAG,GAAG,MAAMH,GAAG,CAACI,IAAJ,CAAS,mBAAT,EAA8B;AAC9CC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OAD6B;AAE9CC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAF8B;AAG9CC,MAAAA,YAAY,EAAEV,iBAAiB,CAACK,OAAD,CAHe;AAI9CM,MAAAA,OAAO,EAAEN,OAAO,CAACM;AAJ6B,KAA9B,CAAlB,CADkC,CAQlC;;AACA,WAAOd,OAAO,CAAC,MAAMS,GAAG,CAACM,IAAJ,EAAP,CAAd;AACD;;AACD,SAAOR,KAAP;AACD,CAhByB,CAA1B","sourcesContent":["'use strict'\n\nconst toCamel = require('../../lib/object-to-camel')\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/name/pubsub').API<HTTPClientExtraOptions>} NamePubsubAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {NamePubsubAPI[\"state\"]}\n   */\n  async function state (options = {}) {\n    const res = await api.post('name/pubsub/state', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams(options),\n      headers: options.headers\n    })\n\n    // @ts-ignore server output is not typed\n    return toCamel(await res.json())\n  }\n  return state\n})\n"]},"metadata":{},"sourceType":"script"}