{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\n\n\nmodule.exports = function ({\n  repo\n}) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API[\"local\"]}\n   */\n  async function* refsLocal(options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, {\n      signal: options.signal\n    })) {\n      yield {\n        ref: cid.toString()\n      };\n    }\n  }\n\n  return withTimeoutOption(refsLocal);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/refs/local.js"],"names":["withTimeoutOption","require","module","exports","repo","refsLocal","options","cid","blocks","queryKeys","signal","ref","toString"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,UAAU;AAAEC,EAAAA;AAAF,CAAV,EAAoB;AACnC;AACF;AACA;AACE,kBAAiBC,SAAjB,CAA4BC,OAAO,GAAG,EAAtC,EAA0C;AACxC,eAAW,MAAMC,GAAjB,IAAwBH,IAAI,CAACI,MAAL,CAAYC,SAAZ,CAAsB,EAAtB,EAA0B;AAAEC,MAAAA,MAAM,EAAEJ,OAAO,CAACI;AAAlB,KAA1B,CAAxB,EAA+E;AAC7E,YAAM;AAAEC,QAAAA,GAAG,EAAEJ,GAAG,CAACK,QAAJ;AAAP,OAAN;AACD;AACF;;AAED,SAAOZ,iBAAiB,CAACK,SAAD,CAAxB;AACD,CAXD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n */\nmodule.exports = function ({ repo }) {\n  /**\n   * @type {import('ipfs-core-types/src/refs').API[\"local\"]}\n   */\n  async function * refsLocal (options = {}) {\n    for await (const cid of repo.blocks.queryKeys({}, { signal: options.signal })) {\n      yield { ref: cid.toString() }\n    }\n  }\n\n  return withTimeoutOption(refsLocal)\n}\n"]},"metadata":{},"sourceType":"script"}