{"ast":null,"code":"'use strict';\n\nvar ipfsUnixfs = require('ipfs-unixfs');\n\nvar persist = require('../utils/persist.js');\n\nvar dagPb = require('@ipld/dag-pb');\n\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new ipfsUnixfs.UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = dagPb.encode(dagPb.prepare({\n    Data: unixfs.marshal()\n  }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\n\nmodule.exports = dirBuilder;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-unixfs-importer/cjs/src/dag-builder/dir.js"],"names":["ipfsUnixfs","require","persist","dagPb","dirBuilder","item","blockstore","options","unixfs","UnixFS","type","mtime","mode","buffer","encode","prepare","Data","marshal","cid","path","size","length","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,qBAAD,CAArB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAMG,UAAU,GAAG,OAAOC,IAAP,EAAaC,UAAb,EAAyBC,OAAzB,KAAqC;AACtD,QAAMC,MAAM,GAAG,IAAIR,UAAU,CAACS,MAAf,CAAsB;AACnCC,IAAAA,IAAI,EAAE,WAD6B;AAEnCC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KAFuB;AAGnCC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AAHwB,GAAtB,CAAf;AAKA,QAAMC,MAAM,GAAGV,KAAK,CAACW,MAAN,CAAaX,KAAK,CAACY,OAAN,CAAc;AAAEC,IAAAA,IAAI,EAAER,MAAM,CAACS,OAAP;AAAR,GAAd,CAAb,CAAf;AACA,QAAMC,GAAG,GAAG,MAAMhB,OAAO,CAACW,MAAD,EAASP,UAAT,EAAqBC,OAArB,CAAzB;AACA,QAAMY,IAAI,GAAGd,IAAI,CAACc,IAAlB;AACA,SAAO;AACLD,IAAAA,GADK;AAELC,IAAAA,IAFK;AAGLX,IAAAA,MAHK;AAILY,IAAAA,IAAI,EAAEP,MAAM,CAACQ;AAJR,GAAP;AAMD,CAfD;;AAiBAC,MAAM,CAACC,OAAP,GAAiBnB,UAAjB","sourcesContent":["'use strict';\n\nvar ipfsUnixfs = require('ipfs-unixfs');\nvar persist = require('../utils/persist.js');\nvar dagPb = require('@ipld/dag-pb');\n\nconst dirBuilder = async (item, blockstore, options) => {\n  const unixfs = new ipfsUnixfs.UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  });\n  const buffer = dagPb.encode(dagPb.prepare({ Data: unixfs.marshal() }));\n  const cid = await persist(buffer, blockstore, options);\n  const path = item.path;\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  };\n};\n\nmodule.exports = dirBuilder;\n"]},"metadata":{},"sourceType":"script"}