{"ast":null,"code":"'use strict';\n\nconst ipns = require('ipns');\n\nconst {\n  toString: uint8ArrayToString\n} = require('uint8arrays/to-string');\n\nmodule.exports = {\n  /**\n   * @param {Uint8Array} buf\n   */\n  encodeBase32: buf => uint8ArrayToString(buf, 'base32upper'),\n  validator: {\n    /**\n     * @param {Uint8Array} key\n     * @param {Uint8Array} record\n     */\n    func: (key, record) => ipns.validator.validate(record, key)\n  },\n\n  /**\n   * @param {*} _k\n   * @param {Uint8Array[]} records\n   */\n  selector: (_k, records) => ipns.validator.select(records[0], records[1])\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/ipns/routing/utils.js"],"names":["ipns","require","toString","uint8ArrayToString","module","exports","encodeBase32","buf","validator","func","key","record","validate","selector","_k","records","select"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAM;AAAEC,EAAAA,QAAQ,EAAEC;AAAZ,IAAmCF,OAAO,CAAC,uBAAD,CAAhD;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACf;AACF;AACA;AACEC,EAAAA,YAAY,EAAGC,GAAD,IAASJ,kBAAkB,CAACI,GAAD,EAAM,aAAN,CAJ1B;AAKfC,EAAAA,SAAS,EAAE;AACT;AACJ;AACA;AACA;AACIC,IAAAA,IAAI,EAAE,CAACC,GAAD,EAAMC,MAAN,KAAiBX,IAAI,CAACQ,SAAL,CAAeI,QAAf,CAAwBD,MAAxB,EAAgCD,GAAhC;AALd,GALI;;AAYf;AACF;AACA;AACA;AACEG,EAAAA,QAAQ,EAAE,CAACC,EAAD,EAAKC,OAAL,KAAiBf,IAAI,CAACQ,SAAL,CAAeQ,MAAf,CAAsBD,OAAO,CAAC,CAAD,CAA7B,EAAkCA,OAAO,CAAC,CAAD,CAAzC;AAhBZ,CAAjB","sourcesContent":["'use strict'\n\nconst ipns = require('ipns')\nconst { toString: uint8ArrayToString } = require('uint8arrays/to-string')\n\nmodule.exports = {\n  /**\n   * @param {Uint8Array} buf\n   */\n  encodeBase32: (buf) => uint8ArrayToString(buf, 'base32upper'),\n  validator: {\n    /**\n     * @param {Uint8Array} key\n     * @param {Uint8Array} record\n     */\n    func: (key, record) => ipns.validator.validate(record, key)\n  },\n  /**\n   * @param {*} _k\n   * @param {Uint8Array[]} records\n   */\n  selector: (_k, records) => ipns.validator.select(records[0], records[1])\n}\n"]},"metadata":{},"sourceType":"script"}