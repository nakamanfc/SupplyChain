{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mew-supplychain\\\\front-end\\\\src\\\\Page\\\\User.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction User() {\n  _s();\n\n  const [account, setAccount] = useState('0x00');\n  const [wallet, setWallet] = useState('false');\n\n  const isMetaMaskInstalled = () => {\n    const {\n      ethereum\n    } = window;\n    if (ethereum && ethereum.isMetaMask) setWallet('True');\n  };\n\n  async function loadBlockchainData() {\n    await ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    const web3 = new Web3(Web3.givenProvider || \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\");\n    const accounts = await web3.eth.getAccounts();\n    setAccount(accounts);\n  }\n\n  useEffect(() => {\n    isMetaMaskInstalled();\n    loadBlockchainData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: account\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: wallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(User, \"GYyMXOEMvNHjrc+wcQzOvOXAjHM=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/src/Page/User.js"],"names":["React","useState","useEffect","Web3","User","account","setAccount","wallet","setWallet","isMetaMaskInstalled","ethereum","window","isMetaMask","loadBlockchainData","request","method","web3","givenProvider","accounts","eth","getAccounts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,MAAD,CAAtC;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,OAAD,CAApC;;AAEA,QAAMQ,mBAAmB,GAAG,MAAM;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAeC,MAArB;AACA,QAAGD,QAAQ,IAAIA,QAAQ,CAACE,UAAxB,EAAmCJ,SAAS,CAAC,MAAD,CAAT;AACtC,GAHD;;AAKA,iBAAeK,kBAAf,GAAoC;AAChC,UAAMH,QAAQ,CAACI,OAAT,CAAiB;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjB,CAAN;AACA,UAAMC,IAAI,GAAG,IAAIb,IAAJ,CAASA,IAAI,CAACc,aAAL,IAAsB,+DAA/B,CAAb;AACA,UAAMC,QAAQ,GAAG,MAAMF,IAAI,CAACG,GAAL,CAASC,WAAT,EAAvB;AACAd,IAAAA,UAAU,CAACY,QAAD,CAAV;AACH;;AAEDhB,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,mBAAmB;AACnBI,IAAAA,kBAAkB;AACrB,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,gBACKE;AADL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAUH;;GA/BQH,I;;KAAAA,I;AAiCT,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Web3 from 'web3';\r\n\r\nfunction User() {\r\n    const [account, setAccount] = useState('0x00')\r\n    const [wallet, setWallet] = useState('false')\r\n\r\n    const isMetaMaskInstalled = () => {\r\n        const { ethereum } = window;\r\n        if(ethereum && ethereum.isMetaMask)setWallet('True');\r\n    };\r\n\r\n    async function loadBlockchainData() {\r\n        await ethereum.request({ method: 'eth_requestAccounts' });\r\n        const web3 = new Web3(Web3.givenProvider || \"https://rinkeby.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\")\r\n        const accounts = await web3.eth.getAccounts()\r\n        setAccount(accounts)\r\n    }\r\n\r\n    useEffect(() => {\r\n        isMetaMaskInstalled()\r\n        loadBlockchainData()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {account}\r\n            </div>\r\n            <div>\r\n                {wallet}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User"]},"metadata":{},"sourceType":"module"}