{"ast":null,"code":"export const BITS = 128;\nexport const GROUPS = 8;\n/**\n * Represents IPv6 address scopes\n * @memberof Address6\n * @static\n */\n\nexport const SCOPES = {\n  0: 'Reserved',\n  1: 'Interface local',\n  2: 'Link local',\n  4: 'Admin local',\n  5: 'Site local',\n  8: 'Organization local',\n  14: 'Global',\n  15: 'Reserved'\n};\n/**\n * Represents IPv6 address types\n * @memberof Address6\n * @static\n */\n\nexport const TYPES = {\n  'ff01::1/128': 'Multicast (All nodes on this interface)',\n  'ff01::2/128': 'Multicast (All routers on this interface)',\n  'ff02::1/128': 'Multicast (All nodes on this link)',\n  'ff02::2/128': 'Multicast (All routers on this link)',\n  'ff05::2/128': 'Multicast (All routers in this site)',\n  'ff02::5/128': 'Multicast (OSPFv3 AllSPF routers)',\n  'ff02::6/128': 'Multicast (OSPFv3 AllDR routers)',\n  'ff02::9/128': 'Multicast (RIP routers)',\n  'ff02::a/128': 'Multicast (EIGRP routers)',\n  'ff02::d/128': 'Multicast (PIM routers)',\n  'ff02::16/128': 'Multicast (MLDv2 reports)',\n  'ff01::fb/128': 'Multicast (mDNSv6)',\n  'ff02::fb/128': 'Multicast (mDNSv6)',\n  'ff05::fb/128': 'Multicast (mDNSv6)',\n  'ff02::1:2/128': 'Multicast (All DHCP servers and relay agents on this link)',\n  'ff05::1:2/128': 'Multicast (All DHCP servers and relay agents in this site)',\n  'ff02::1:3/128': 'Multicast (All DHCP servers on this link)',\n  'ff05::1:3/128': 'Multicast (All DHCP servers in this site)',\n  '::/128': 'Unspecified',\n  '::1/128': 'Loopback',\n  'ff00::/8': 'Multicast',\n  'fe80::/10': 'Link-local unicast'\n};\n/**\n * A regular expression that matches bad characters in an IPv6 address\n * @memberof Address6\n * @static\n */\n\nexport const RE_BAD_CHARACTERS = /([^0-9a-f:/%])/gi;\n/**\n * A regular expression that matches an incorrect IPv6 address\n * @memberof Address6\n * @static\n */\n\nexport const RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/gi;\n/**\n * A regular expression that matches an IPv6 subnet\n * @memberof Address6\n * @static\n */\n\nexport const RE_SUBNET_STRING = /\\/\\d{1,3}(?=%|$)/;\n/**\n * A regular expression that matches an IPv6 zone\n * @memberof Address6\n * @static\n */\n\nexport const RE_ZONE_STRING = /%.*$/;\nexport const RE_URL = new RegExp(/^\\[{0,1}([0-9a-f:]+)\\]{0,1}/);\nexport const RE_URL_WITH_PORT = new RegExp(/\\[([0-9a-f:]+)\\]:([0-9]{1,5})/);","map":{"version":3,"sources":["../../../../lib/v6/constants.ts"],"names":[],"mappings":"AAAA,OAAO,MAAM,IAAI,GAAG,GAAb;AACP,OAAO,MAAM,MAAM,GAAG,CAAf;AAEP;;;;AAIG;;AACH,OAAO,MAAM,MAAM,GAA0C;AAC3D,KAAG,UADwD;AAE3D,KAAG,iBAFwD;AAG3D,KAAG,YAHwD;AAI3D,KAAG,aAJwD;AAK3D,KAAG,YALwD;AAM3D,KAAG,oBANwD;AAO3D,MAAI,QAPuD;AAQ3D,MAAI;AARuD,CAAtD;AAWP;;;;AAIG;;AACH,OAAO,MAAM,KAAK,GAA0C;AAC1D,iBAAe,yCAD2C;AAE1D,iBAAe,2CAF2C;AAG1D,iBAAe,oCAH2C;AAI1D,iBAAe,sCAJ2C;AAK1D,iBAAe,sCAL2C;AAM1D,iBAAe,mCAN2C;AAO1D,iBAAe,kCAP2C;AAQ1D,iBAAe,yBAR2C;AAS1D,iBAAe,2BAT2C;AAU1D,iBAAe,yBAV2C;AAW1D,kBAAgB,2BAX0C;AAY1D,kBAAgB,oBAZ0C;AAa1D,kBAAgB,oBAb0C;AAc1D,kBAAgB,oBAd0C;AAe1D,mBAAiB,4DAfyC;AAgB1D,mBAAiB,4DAhByC;AAiB1D,mBAAiB,2CAjByC;AAkB1D,mBAAiB,2CAlByC;AAmB1D,YAAU,aAnBgD;AAoB1D,aAAW,UApB+C;AAqB1D,cAAY,WArB8C;AAsB1D,eAAa;AAtB6C,CAArD;AAyBP;;;;AAIG;;AACH,OAAO,MAAM,iBAAiB,GAAG,kBAA1B;AAEP;;;;AAIG;;AACH,OAAO,MAAM,cAAc,GAAG,0CAAvB;AAEP;;;;AAIG;;AACH,OAAO,MAAM,gBAAgB,GAAG,kBAAzB;AAEP;;;;AAIG;;AACH,OAAO,MAAM,cAAc,GAAG,MAAvB;AAEP,OAAO,MAAM,MAAM,GAAG,IAAI,MAAJ,CAAW,6BAAX,CAAf;AACP,OAAO,MAAM,gBAAgB,GAAG,IAAI,MAAJ,CAAW,+BAAX,CAAzB","sourceRoot":"","sourcesContent":["export const BITS = 128;\nexport const GROUPS = 8;\n/**\n * Represents IPv6 address scopes\n * @memberof Address6\n * @static\n */\nexport const SCOPES = {\n    0: 'Reserved',\n    1: 'Interface local',\n    2: 'Link local',\n    4: 'Admin local',\n    5: 'Site local',\n    8: 'Organization local',\n    14: 'Global',\n    15: 'Reserved',\n};\n/**\n * Represents IPv6 address types\n * @memberof Address6\n * @static\n */\nexport const TYPES = {\n    'ff01::1/128': 'Multicast (All nodes on this interface)',\n    'ff01::2/128': 'Multicast (All routers on this interface)',\n    'ff02::1/128': 'Multicast (All nodes on this link)',\n    'ff02::2/128': 'Multicast (All routers on this link)',\n    'ff05::2/128': 'Multicast (All routers in this site)',\n    'ff02::5/128': 'Multicast (OSPFv3 AllSPF routers)',\n    'ff02::6/128': 'Multicast (OSPFv3 AllDR routers)',\n    'ff02::9/128': 'Multicast (RIP routers)',\n    'ff02::a/128': 'Multicast (EIGRP routers)',\n    'ff02::d/128': 'Multicast (PIM routers)',\n    'ff02::16/128': 'Multicast (MLDv2 reports)',\n    'ff01::fb/128': 'Multicast (mDNSv6)',\n    'ff02::fb/128': 'Multicast (mDNSv6)',\n    'ff05::fb/128': 'Multicast (mDNSv6)',\n    'ff02::1:2/128': 'Multicast (All DHCP servers and relay agents on this link)',\n    'ff05::1:2/128': 'Multicast (All DHCP servers and relay agents in this site)',\n    'ff02::1:3/128': 'Multicast (All DHCP servers on this link)',\n    'ff05::1:3/128': 'Multicast (All DHCP servers in this site)',\n    '::/128': 'Unspecified',\n    '::1/128': 'Loopback',\n    'ff00::/8': 'Multicast',\n    'fe80::/10': 'Link-local unicast',\n};\n/**\n * A regular expression that matches bad characters in an IPv6 address\n * @memberof Address6\n * @static\n */\nexport const RE_BAD_CHARACTERS = /([^0-9a-f:/%])/gi;\n/**\n * A regular expression that matches an incorrect IPv6 address\n * @memberof Address6\n * @static\n */\nexport const RE_BAD_ADDRESS = /([0-9a-f]{5,}|:{3,}|[^:]:$|^:[^:]|\\/$)/gi;\n/**\n * A regular expression that matches an IPv6 subnet\n * @memberof Address6\n * @static\n */\nexport const RE_SUBNET_STRING = /\\/\\d{1,3}(?=%|$)/;\n/**\n * A regular expression that matches an IPv6 zone\n * @memberof Address6\n * @static\n */\nexport const RE_ZONE_STRING = /%.*$/;\nexport const RE_URL = new RegExp(/^\\[{0,1}([0-9a-f:]+)\\]{0,1}/);\nexport const RE_URL_WITH_PORT = new RegExp(/\\[([0-9a-f:]+)\\]:([0-9]{1,5})/);\n//# sourceMappingURL=constants.js.map"]},"metadata":{},"sourceType":"module"}