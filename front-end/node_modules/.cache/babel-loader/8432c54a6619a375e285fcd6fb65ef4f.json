{"ast":null,"code":"'use strict';\n\nconst createExport = require('./export');\n\nconst createGet = require('./get');\n\nconst createImport = require('./import');\n\nconst createPut = require('./put');\n\nconst createResolve = require('./resolve');\n\nclass DagAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor({\n    repo,\n    codecs,\n    hashers,\n    preload\n  }) {\n    this.export = createExport({\n      repo,\n      preload,\n      codecs\n    });\n    this.get = createGet({\n      codecs,\n      repo,\n      preload\n    });\n    this.import = createImport({\n      repo\n    });\n    this.resolve = createResolve({\n      repo,\n      codecs,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      codecs,\n      hashers,\n      preload\n    });\n  }\n\n}\n\nmodule.exports = DagAPI;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/dag/index.js"],"names":["createExport","require","createGet","createImport","createPut","createResolve","DagAPI","constructor","repo","codecs","hashers","preload","export","get","import","resolve","put","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,UAAD,CAA5B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,UAAD,CAA5B;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMI,aAAa,GAAGJ,OAAO,CAAC,WAAD,CAA7B;;AAEA,MAAMK,MAAN,CAAa;AACX;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,GAAF,EAAsC;AAC/C,SAAKC,MAAL,GAAcZ,YAAY,CAAC;AAAEQ,MAAAA,IAAF;AAAQG,MAAAA,OAAR;AAAiBF,MAAAA;AAAjB,KAAD,CAA1B;AACA,SAAKI,GAAL,GAAWX,SAAS,CAAC;AAAEO,MAAAA,MAAF;AAAUD,MAAAA,IAAV;AAAgBG,MAAAA;AAAhB,KAAD,CAApB;AACA,SAAKG,MAAL,GAAcX,YAAY,CAAC;AAAEK,MAAAA;AAAF,KAAD,CAA1B;AACA,SAAKO,OAAL,GAAeV,aAAa,CAAC;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBE,MAAAA;AAAhB,KAAD,CAA5B;AACA,SAAKK,GAAL,GAAWZ,SAAS,CAAC;AAAEI,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA;AAAzB,KAAD,CAApB;AACD;;AAdU;;AAiBbM,MAAM,CAACC,OAAP,GAAiBZ,MAAjB","sourcesContent":["'use strict'\n\nconst createExport = require('./export')\nconst createGet = require('./get')\nconst createImport = require('./import')\nconst createPut = require('./put')\nconst createResolve = require('./resolve')\n\nclass DagAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {import('../../types').Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ repo, codecs, hashers, preload }) {\n    this.export = createExport({ repo, preload, codecs })\n    this.get = createGet({ codecs, repo, preload })\n    this.import = createImport({ repo })\n    this.resolve = createResolve({ repo, codecs, preload })\n    this.put = createPut({ repo, codecs, hashers, preload })\n  }\n}\n\nmodule.exports = DagAPI\n"]},"metadata":{},"sourceType":"script"}