{"ast":null,"code":"'use strict';\n\nconst configure = require('../../lib/configure');\n\nconst toUrlSearchParams = require('../../lib/to-url-search-params');\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply(profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    });\n    const data = await res.json();\n    return {\n      original: data.OldCfg,\n      updated: data.NewCfg\n    };\n  }\n\n  return apply;\n});","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-http-client/src/config/profiles/apply.js"],"names":["configure","require","toUrlSearchParams","module","exports","api","apply","profile","options","res","post","timeout","signal","searchParams","arg","headers","data","json","original","OldCfg","updated","NewCfg"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,gCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBJ,SAAS,CAACK,GAAG,IAAI;AAChC;AACF;AACA;AACE,iBAAeC,KAAf,CAAsBC,OAAtB,EAA+BC,OAAO,GAAG,EAAzC,EAA6C;AAC3C,UAAMC,GAAG,GAAG,MAAMJ,GAAG,CAACK,IAAJ,CAAS,sBAAT,EAAiC;AACjDC,MAAAA,OAAO,EAAEH,OAAO,CAACG,OADgC;AAEjDC,MAAAA,MAAM,EAAEJ,OAAO,CAACI,MAFiC;AAGjDC,MAAAA,YAAY,EAAEX,iBAAiB,CAAC;AAC9BY,QAAAA,GAAG,EAAEP,OADyB;AAE9B,WAAGC;AAF2B,OAAD,CAHkB;AAOjDO,MAAAA,OAAO,EAAEP,OAAO,CAACO;AAPgC,KAAjC,CAAlB;AASA,UAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;AAEA,WAAO;AACLC,MAAAA,QAAQ,EAAEF,IAAI,CAACG,MADV;AACkBC,MAAAA,OAAO,EAAEJ,IAAI,CAACK;AADhC,KAAP;AAGD;;AAED,SAAOf,KAAP;AACD,CAtByB,CAA1B","sourcesContent":["'use strict'\n\nconst configure = require('../../lib/configure')\nconst toUrlSearchParams = require('../../lib/to-url-search-params')\n\n/**\n * @typedef {import('../../types').HTTPClientExtraOptions} HTTPClientExtraOptions\n * @typedef {import('ipfs-core-types/src/config/profiles').API<HTTPClientExtraOptions>} ConfigProfilesAPI\n */\n\nmodule.exports = configure(api => {\n  /**\n   * @type {ConfigProfilesAPI[\"apply\"]}\n   */\n  async function apply (profile, options = {}) {\n    const res = await api.post('config/profile/apply', {\n      timeout: options.timeout,\n      signal: options.signal,\n      searchParams: toUrlSearchParams({\n        arg: profile,\n        ...options\n      }),\n      headers: options.headers\n    })\n    const data = await res.json()\n\n    return {\n      original: data.OldCfg, updated: data.NewCfg\n    }\n  }\n\n  return apply\n})\n"]},"metadata":{},"sourceType":"script"}