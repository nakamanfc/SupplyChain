{"ast":null,"code":"'use strict';\n\nvar errCode = require('err-code');\n\nvar dagPb = require('@ipld/dag-pb');\n\nvar dagCbor = require('@ipld/dag-cbor');\n\nvar raw = require('multiformats/codecs/raw');\n\nvar identity = require('multiformats/hashes/identity');\n\nvar index = require('./unixfs-v1/index.js');\n\nvar raw$1 = require('./raw.js');\n\nvar dagCbor$1 = require('./dag-cbor.js');\n\nvar identity$1 = require('./identity.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\n\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\n\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nconst resolvers = {\n  [dagPb__namespace.code]: index,\n  [raw__namespace.code]: raw$1,\n  [dagCbor__namespace.code]: dagCbor$1,\n  [identity.identity.code]: identity$1\n};\n\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n\n  if (!resolver) {\n    throw errCode__default['default'](new Error(`No resolver for code ${cid.code}`), 'ERR_NO_RESOLVER');\n  }\n\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\n\nmodule.exports = resolve;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-unixfs-exporter/cjs/src/resolvers/index.js"],"names":["errCode","require","dagPb","dagCbor","raw","identity","index","raw$1","dagCbor$1","identity$1","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","errCode__default","dagPb__namespace","dagCbor__namespace","raw__namespace","resolvers","code","resolve","cid","name","path","toResolve","depth","blockstore","options","resolver","Error","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar errCode = require('err-code');\nvar dagPb = require('@ipld/dag-pb');\nvar dagCbor = require('@ipld/dag-cbor');\nvar raw = require('multiformats/codecs/raw');\nvar identity = require('multiformats/hashes/identity');\nvar index = require('./unixfs-v1/index.js');\nvar raw$1 = require('./raw.js');\nvar dagCbor$1 = require('./dag-cbor.js');\nvar identity$1 = require('./identity.js');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar dagPb__namespace = /*#__PURE__*/_interopNamespace(dagPb);\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\nvar raw__namespace = /*#__PURE__*/_interopNamespace(raw);\n\nconst resolvers = {\n  [dagPb__namespace.code]: index,\n  [raw__namespace.code]: raw$1,\n  [dagCbor__namespace.code]: dagCbor$1,\n  [identity.identity.code]: identity$1\n};\nfunction resolve(cid, name, path, toResolve, depth, blockstore, options) {\n  const resolver = resolvers[cid.code];\n  if (!resolver) {\n    throw errCode__default['default'](new Error(`No resolver for code ${ cid.code }`), 'ERR_NO_RESOLVER');\n  }\n  return resolver(cid, name, path, toResolve, resolve, depth, blockstore, options);\n}\n\nmodule.exports = resolve;\n"]},"metadata":{},"sourceType":"script"}