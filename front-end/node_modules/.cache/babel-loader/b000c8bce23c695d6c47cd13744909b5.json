{"ast":null,"code":"'use strict';\n\nconst createGC = require('./gc');\n\nconst createStat = require('./stat');\n\nconst createVersion = require('./version');\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/src/multihashes')} Multihashes\n */\n\n\nclass RepoAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor({\n    repo,\n    hashers\n  }) {\n    this.gc = createGC({\n      repo,\n      hashers\n    });\n    this.stat = createStat({\n      repo\n    });\n    this.version = createVersion({\n      repo\n    });\n    /**\n     * @param {string} addr\n     */\n\n    this.setApiAddr = addr => repo.apiAddr.set(addr);\n  }\n\n}\n\nmodule.exports = RepoAPI;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/repo/index.js"],"names":["createGC","require","createStat","createVersion","RepoAPI","constructor","repo","hashers","gc","stat","version","setApiAddr","addr","apiAddr","set","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAME,aAAa,GAAGF,OAAO,CAAC,WAAD,CAA7B;AAEA;AACA;AACA;AACA;;;AAEA,MAAMG,OAAN,CAAc;AACZ;AACF;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAF,EAAqB;AAC9B,SAAKC,EAAL,GAAUR,QAAQ,CAAC;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAlB;AACA,SAAKE,IAAL,GAAYP,UAAU,CAAC;AAAEI,MAAAA;AAAF,KAAD,CAAtB;AACA,SAAKI,OAAL,GAAeP,aAAa,CAAC;AAAEG,MAAAA;AAAF,KAAD,CAA5B;AAEA;AACJ;AACA;;AACI,SAAKK,UAAL,GAAmBC,IAAD,IAAUN,IAAI,CAACO,OAAL,CAAaC,GAAb,CAAiBF,IAAjB,CAA5B;AACD;;AAfW;;AAiBdG,MAAM,CAACC,OAAP,GAAiBZ,OAAjB","sourcesContent":["'use strict'\n\nconst createGC = require('./gc')\nconst createStat = require('./stat')\nconst createVersion = require('./version')\n\n/**\n * @typedef {import('multiformats/hashes/interface').MultihashHasher} MultihashHasher\n * @typedef {import('ipfs-core-utils/src/multihashes')} Multihashes\n */\n\nclass RepoAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {Multihashes} config.hashers\n   */\n  constructor ({ repo, hashers }) {\n    this.gc = createGC({ repo, hashers })\n    this.stat = createStat({ repo })\n    this.version = createVersion({ repo })\n\n    /**\n     * @param {string} addr\n     */\n    this.setApiAddr = (addr) => repo.apiAddr.set(addr)\n  }\n}\nmodule.exports = RepoAPI\n"]},"metadata":{},"sourceType":"script"}