{"ast":null,"code":"'use strict';\n\nconst emptyOptions = Object.freeze({});\n\nfunction AbstractChainedBatch(db) {\n  if (typeof db !== 'object' || db === null) {\n    throw new TypeError('First argument must be an abstract-leveldown compliant store');\n  }\n\n  this.db = db;\n  this._operations = [];\n  this._written = false;\n}\n\nAbstractChainedBatch.prototype._checkWritten = function () {\n  if (this._written) {\n    throw new Error('write() already called on this batch');\n  }\n};\n\nAbstractChainedBatch.prototype.put = function (key, value, options) {\n  this._checkWritten();\n\n  const err = this.db._checkKey(key) || this.db._checkValue(value);\n\n  if (err) throw err;\n  key = this.db._serializeKey(key);\n  value = this.db._serializeValue(value);\n\n  this._put(key, value, options != null ? options : emptyOptions);\n\n  return this;\n};\n\nAbstractChainedBatch.prototype._put = function (key, value, options) {\n  this._operations.push({ ...options,\n    type: 'put',\n    key,\n    value\n  });\n};\n\nAbstractChainedBatch.prototype.del = function (key, options) {\n  this._checkWritten();\n\n  const err = this.db._checkKey(key);\n\n  if (err) throw err;\n  key = this.db._serializeKey(key);\n\n  this._del(key, options != null ? options : emptyOptions);\n\n  return this;\n};\n\nAbstractChainedBatch.prototype._del = function (key, options) {\n  this._operations.push({ ...options,\n    type: 'del',\n    key\n  });\n};\n\nAbstractChainedBatch.prototype.clear = function () {\n  this._checkWritten();\n\n  this._clear();\n\n  return this;\n};\n\nAbstractChainedBatch.prototype._clear = function () {\n  this._operations = [];\n};\n\nAbstractChainedBatch.prototype.write = function (options, callback) {\n  this._checkWritten();\n\n  if (typeof options === 'function') {\n    callback = options;\n  }\n\n  if (typeof callback !== 'function') {\n    throw new Error('write() requires a callback argument');\n  }\n\n  if (typeof options !== 'object' || options === null) {\n    options = {};\n  }\n\n  this._written = true;\n\n  this._write(options, callback);\n};\n\nAbstractChainedBatch.prototype._write = function (options, callback) {\n  this.db._batch(this._operations, options, callback);\n}; // Expose browser-compatible nextTick for dependents\n\n\nAbstractChainedBatch.prototype._nextTick = require('./next-tick');\nmodule.exports = AbstractChainedBatch;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/abstract-leveldown/abstract-chained-batch.js"],"names":["emptyOptions","Object","freeze","AbstractChainedBatch","db","TypeError","_operations","_written","prototype","_checkWritten","Error","put","key","value","options","err","_checkKey","_checkValue","_serializeKey","_serializeValue","_put","push","type","del","_del","clear","_clear","write","callback","_write","_batch","_nextTick","require","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst emptyOptions = Object.freeze({})\n\nfunction AbstractChainedBatch (db) {\n  if (typeof db !== 'object' || db === null) {\n    throw new TypeError('First argument must be an abstract-leveldown compliant store')\n  }\n\n  this.db = db\n  this._operations = []\n  this._written = false\n}\n\nAbstractChainedBatch.prototype._checkWritten = function () {\n  if (this._written) {\n    throw new Error('write() already called on this batch')\n  }\n}\n\nAbstractChainedBatch.prototype.put = function (key, value, options) {\n  this._checkWritten()\n\n  const err = this.db._checkKey(key) || this.db._checkValue(value)\n  if (err) throw err\n\n  key = this.db._serializeKey(key)\n  value = this.db._serializeValue(value)\n\n  this._put(key, value, options != null ? options : emptyOptions)\n\n  return this\n}\n\nAbstractChainedBatch.prototype._put = function (key, value, options) {\n  this._operations.push({ ...options, type: 'put', key, value })\n}\n\nAbstractChainedBatch.prototype.del = function (key, options) {\n  this._checkWritten()\n\n  const err = this.db._checkKey(key)\n  if (err) throw err\n\n  key = this.db._serializeKey(key)\n  this._del(key, options != null ? options : emptyOptions)\n\n  return this\n}\n\nAbstractChainedBatch.prototype._del = function (key, options) {\n  this._operations.push({ ...options, type: 'del', key })\n}\n\nAbstractChainedBatch.prototype.clear = function () {\n  this._checkWritten()\n  this._clear()\n\n  return this\n}\n\nAbstractChainedBatch.prototype._clear = function () {\n  this._operations = []\n}\n\nAbstractChainedBatch.prototype.write = function (options, callback) {\n  this._checkWritten()\n\n  if (typeof options === 'function') {\n    callback = options\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('write() requires a callback argument')\n  }\n  if (typeof options !== 'object' || options === null) {\n    options = {}\n  }\n\n  this._written = true\n  this._write(options, callback)\n}\n\nAbstractChainedBatch.prototype._write = function (options, callback) {\n  this.db._batch(this._operations, options, callback)\n}\n\n// Expose browser-compatible nextTick for dependents\nAbstractChainedBatch.prototype._nextTick = require('./next-tick')\n\nmodule.exports = AbstractChainedBatch\n"]},"metadata":{},"sourceType":"script"}