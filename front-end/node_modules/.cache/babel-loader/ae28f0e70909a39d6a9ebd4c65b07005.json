{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mew-supplychain\\\\front-end\\\\src\\\\Component\\\\PostPage\\\\PostBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PostImg from '../PostPage/PostImg';\nimport '../../Style/Introduce2.css';\nimport '../../Style/PostBody.css';\nimport PostAdd from './PostAdd';\nimport ProcessBody from './ProcessBody';\nimport WebThree from '../../Function/WebThree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction PostBody() {\n  _s();\n\n  const [db, setDd] = useState([]);\n  const [name, setName] = useState('');\n  const [code, setCode] = useState('');\n  const [weight, setWeight] = useState('');\n  const [image, setImage] = useState('');\n  const [loadingCircle, setLoadingCircle] = useState(false);\n\n  async function createProcess() {\n    setLoadingCircle(true);\n    const time = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: name,\n        staff: localStorage.getItem('account'),\n        image: image,\n        weight: weight,\n        processcode: code,\n        time: time\n      })\n    };\n    await fetch(\"http://localhost:5000/process\", requestOptions).then(res => {\n      res.text();\n      setLoadingCircle(false);\n    });\n  }\n\n  async function getDataListProcess() {\n    await fetch(`http://localhost:5000/process/${localStorage.getItem(\"account\")}`).then(res => res.json()).then(res => setDd(res));\n  }\n\n  async function addToBlokChain(time) {\n    WebThree.setAccount(localStorage.getItem('key'));\n    await WebThree.method.CreateProcess(weight, name, code, image).send({\n      from: `${localStorage.getItem('account')}`,\n      gasPrice: 0,\n      gas: 200000\n    }).on('receipt', function (receipt) {\n      puthData(receipt.events.NewEvent.returnValues.ID, receipt.transactionHash, address, time);\n    });\n  } // function puthData(id,txhash,address){\n  //     const requestOptions = {\n  //         method: 'put',\n  //         headers: {'Content-Type': 'application/json'},\n  //         body: JSON.stringify({id:id,txhash:txhash,address:address})\n  //     };\n  //     fetch(\"http://localhost:5000/process\", requestOptions).then(getStaffList)\n  // }\n\n\n  useEffect(() => {\n    getDataListProcess();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"postbody-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postbody-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postbody-box-left\",\n          children: /*#__PURE__*/_jsxDEV(PostAdd, {\n            createProcess: createProcess,\n            setName: setName,\n            setCode: setCode,\n            setWeight: setWeight,\n            loadingCircle: loadingCircle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postbody-box-right\",\n          children: /*#__PURE__*/_jsxDEV(PostImg, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ProcessBody, {\n      db: db\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PostBody, \"OkKvsI3N6H2M0Wv1pFEFi2jnViA=\");\n\n_c = PostBody;\nexport default PostBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostBody\");","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/src/Component/PostPage/PostBody.js"],"names":["React","useState","useEffect","PostImg","PostAdd","ProcessBody","WebThree","date","Date","PostBody","db","setDd","name","setName","code","setCode","weight","setWeight","image","setImage","loadingCircle","setLoadingCircle","createProcess","time","getFullYear","getMonth","getDay","getHours","getMinutes","getSeconds","requestOptions","method","headers","body","JSON","stringify","staff","localStorage","getItem","processcode","fetch","then","res","text","getDataListProcess","json","addToBlokChain","setAccount","CreateProcess","send","from","gasPrice","gas","on","receipt","puthData","events","NewEvent","returnValues","ID","transactionHash","address"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAO,4BAAP;AACA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAChB,QAAK,CAACC,EAAD,EAAIC,KAAJ,IAAaV,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAK,CAACW,IAAD,EAAMC,OAAN,IAAiBZ,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACa,IAAD,EAAMC,OAAN,IAAiBd,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAK,CAACe,MAAD,EAAQC,SAAR,IAAqBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAK,CAACiB,KAAD,EAAOC,QAAP,IAAmBlB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAK,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,KAAD,CAAjD;;AAEA,iBAAeqB,aAAf,GAA8B;AAC1BD,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA,UAAME,IAAI,GAAI,GAAEhB,IAAI,CAACiB,WAAL,EAAmB,IAAGjB,IAAI,CAACkB,QAAL,EAAgB,IAAGlB,IAAI,CAACmB,MAAL,EAAc,IAAGnB,IAAI,CAACoB,QAAL,EAAgB,IAAGpB,IAAI,CAACqB,UAAL,EAAkB,IAAGrB,IAAI,CAACsB,UAAL,EAAkB,EAApI;AACA,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,MADW;AAEnBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBvB,QAAAA,IAAI,EAACA,IADY;AAEjBwB,QAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAFW;AAGjBpB,QAAAA,KAAK,EAACA,KAHW;AAIjBF,QAAAA,MAAM,EAACA,MAJU;AAKjBuB,QAAAA,WAAW,EAACzB,IALK;AAMjBS,QAAAA,IAAI,EAACA;AANY,OAAf;AAHa,KAAvB;AAYA,UAAMiB,KAAK,CAAC,+BAAD,EAAkCV,cAAlC,CAAL,CACLW,IADK,CACAC,GAAG,IAAI;AAACA,MAAAA,GAAG,CAACC,IAAJ;AAAYtB,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AAAwB,KAD5C,CAAN;AAEH;;AAED,iBAAeuB,kBAAf,GAAmC;AAC/B,UAAMJ,KAAK,CAAE,iCAAgCH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,EAAlE,CAAL,CAA0EG,IAA1E,CAA+EC,GAAG,IAAIA,GAAG,CAACG,IAAJ,EAAtF,EAAkGJ,IAAlG,CAAuGC,GAAG,IAAI/B,KAAK,CAAC+B,GAAD,CAAnH,CAAN;AACH;;AAED,iBAAeI,cAAf,CAA8BvB,IAA9B,EAAmC;AAC/BjB,IAAAA,QAAQ,CAACyC,UAAT,CAAoBV,YAAY,CAACC,OAAb,CAAqB,KAArB,CAApB;AACA,UAAMhC,QAAQ,CAACyB,MAAT,CACLiB,aADK,CACShC,MADT,EACgBJ,IADhB,EACqBE,IADrB,EAC0BI,KAD1B,EAEL+B,IAFK,CAEA;AAACC,MAAAA,IAAI,EAAG,GAAEb,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,EAA1C;AAA6Ca,MAAAA,QAAQ,EAAC,CAAtD;AAAyDC,MAAAA,GAAG,EAAC;AAA7D,KAFA,EAGLC,EAHK,CAGF,SAHE,EAGS,UAASC,OAAT,EAAiB;AAACC,MAAAA,QAAQ,CAACD,OAAO,CAACE,MAAR,CAAeC,QAAf,CAAwBC,YAAxB,CAAqCC,EAAtC,EAAyCL,OAAO,CAACM,eAAjD,EAAiEC,OAAjE,EAAyEtC,IAAzE,CAAR;AAAuF,KAHlH,CAAN;AAIH,GArCe,CAuChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEArB,EAAAA,SAAS,CAAC,MAAM;AACZ0C,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,iCACI,QAAC,OAAD;AACI,YAAA,aAAa,EAAEtB,aADnB;AAEI,YAAA,OAAO,EAAET,OAFb;AAGI,YAAA,OAAO,EAAEE,OAHb;AAII,YAAA,SAAS,EAAEE,SAJf;AAKI,YAAA,aAAa,EAAEG;AALnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAUI;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,iCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADA,eAiBA,QAAC,WAAD;AAAa,MAAA,EAAE,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,YAjBA;AAAA,kBADJ;AAqBH;;GAzEQD,Q;;KAAAA,Q;AA2ET,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport PostImg from '../PostPage/PostImg'\r\nimport '../../Style/Introduce2.css'\r\nimport '../../Style/PostBody.css'\r\nimport PostAdd from './PostAdd'\r\nimport ProcessBody from './ProcessBody'\r\nimport WebThree from '../../Function/WebThree'\r\n\r\nconst date = new Date()\r\nfunction PostBody() {\r\n    const[db,setDd] = useState([])\r\n    const[name,setName] = useState('')\r\n    const[code,setCode] = useState('')\r\n    const[weight,setWeight] = useState('')\r\n    const[image,setImage] = useState('')\r\n    const[loadingCircle, setLoadingCircle] = useState(false)\r\n\r\n    async function createProcess(){\r\n        setLoadingCircle(true)\r\n        const time = `${date.getFullYear()}-${date.getMonth()}-${date.getDay()} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({\r\n                name:name,\r\n                staff:localStorage.getItem('account'),\r\n                image:image,\r\n                weight:weight,\r\n                processcode:code,\r\n                time:time\r\n            })\r\n        };\r\n        await fetch(\"http://localhost:5000/process\", requestOptions)\r\n        .then(res => {res.text(); setLoadingCircle(false)})\r\n    }\r\n\r\n    async function getDataListProcess(){\r\n        await fetch(`http://localhost:5000/process/${localStorage.getItem(\"account\")}`).then(res => res.json()).then(res => setDd(res))\r\n    }\r\n\r\n    async function addToBlokChain(time){\r\n        WebThree.setAccount(localStorage.getItem('key'))\r\n        await WebThree.method\r\n        .CreateProcess(weight,name,code,image)\r\n        .send({from: `${localStorage.getItem('account')}`, gasPrice:0, gas:200000})\r\n        .on('receipt', function(receipt){puthData(receipt.events.NewEvent.returnValues.ID,receipt.transactionHash,address,time)})\r\n    }\r\n\r\n    // function puthData(id,txhash,address){\r\n    //     const requestOptions = {\r\n    //         method: 'put',\r\n    //         headers: {'Content-Type': 'application/json'},\r\n    //         body: JSON.stringify({id:id,txhash:txhash,address:address})\r\n    //     };\r\n    //     fetch(\"http://localhost:5000/process\", requestOptions).then(getStaffList)\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getDataListProcess()\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n        <div className='postbody-container'>\r\n            <div className='postbody-box'>\r\n                <div className='postbody-box-left'>\r\n                    <PostAdd\r\n                        createProcess={createProcess}\r\n                        setName={setName}\r\n                        setCode={setCode}\r\n                        setWeight={setWeight}\r\n                        loadingCircle={loadingCircle}\r\n                    />\r\n                </div>\r\n                <div className='postbody-box-right'>\r\n                    <PostImg/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <ProcessBody db={db}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PostBody\r\n"]},"metadata":{},"sourceType":"module"}