{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\n\n\nmodule.exports = ({\n  network\n}) => {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API[\"wantlist\"]}\n   */\n  async function wantlist(options = {}) {\n    const {\n      bitswap\n    } = await network.use(options);\n    const list = bitswap.getWantlist();\n    return Array.from(list).map(e => e[1].cid);\n  }\n\n  return withTimeoutOption(wantlist);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/bitswap/wantlist.js"],"names":["withTimeoutOption","require","module","exports","network","wantlist","options","bitswap","use","list","getWantlist","Array","from","map","e","cid"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC;AACF;AACA;AACE,iBAAeC,QAAf,CAAyBC,OAAO,GAAG,EAAnC,EAAuC;AACrC,UAAM;AAAEC,MAAAA;AAAF,QAAc,MAAMH,OAAO,CAACI,GAAR,CAAYF,OAAZ,CAA1B;AACA,UAAMG,IAAI,GAAGF,OAAO,CAACG,WAAR,EAAb;AAEA,WAAOC,KAAK,CAACC,IAAN,CAAWH,IAAX,EAAiBI,GAAjB,CAAqBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,GAA/B,CAAP;AACD;;AAED,SAAOf,iBAAiB,CAACK,QAAD,CAAxB;AACD,CAZD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('../../types').NetworkService} config.network\n */\nmodule.exports = ({ network }) => {\n  /**\n   * @type {import('ipfs-core-types/src/bitswap').API[\"wantlist\"]}\n   */\n  async function wantlist (options = {}) {\n    const { bitswap } = await network.use(options)\n    const list = bitswap.getWantlist()\n\n    return Array.from(list).map(e => e[1].cid)\n  }\n\n  return withTimeoutOption(wantlist)\n}\n"]},"metadata":{},"sourceType":"script"}