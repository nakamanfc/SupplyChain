{"ast":null,"code":"'use strict';\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option');\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\n\n\nmodule.exports = ({\n  repo,\n  preload\n}) => {\n  const get = require('../get')({\n    repo,\n    preload\n  });\n\n  const put = require('../put')({\n    repo,\n    preload\n  });\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"addLink\"]}\n   */\n\n\n  async function addLink(cid, link, options = {}) {\n    const node = await get(cid, options);\n    return put({ ...node,\n      Links: node.Links.concat([link])\n    }, options);\n  }\n\n  return withTimeoutOption(addLink);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/object/patch/add-link.js"],"names":["withTimeoutOption","require","module","exports","repo","preload","get","put","addLink","cid","link","options","node","Links","concat"],"mappings":"AAAA;;AAEA,MAAMA,iBAAiB,GAAGC,OAAO,CAAC,yCAAD,CAAjC;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AACtC,QAAMC,GAAG,GAAGL,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAlB,CAAZ;;AACA,QAAME,GAAG,GAAGN,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEG,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAlB,CAAZ;AAEA;AACF;AACA;;;AACE,iBAAeG,OAAf,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,OAAO,GAAG,EAA7C,EAAiD;AAC/C,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACG,GAAD,EAAME,OAAN,CAAtB;AAEA,WAAOJ,GAAG,CAAC,EACT,GAAGK,IADM;AAETC,MAAAA,KAAK,EAAED,IAAI,CAACC,KAAL,CAAWC,MAAX,CAAkB,CAACJ,IAAD,CAAlB;AAFE,KAAD,EAGPC,OAHO,CAAV;AAID;;AAED,SAAOX,iBAAiB,CAACQ,OAAD,CAAxB;AACD,CAjBD","sourcesContent":["'use strict'\n\nconst withTimeoutOption = require('ipfs-core-utils/src/with-timeout-option')\n\n/**\n * @param {Object} config\n * @param {import('ipfs-repo').IPFSRepo} config.repo\n * @param {import('../../../types').Preload} config.preload\n */\nmodule.exports = ({ repo, preload }) => {\n  const get = require('../get')({ repo, preload })\n  const put = require('../put')({ repo, preload })\n\n  /**\n   * @type {import('ipfs-core-types/src/object/patch').API[\"addLink\"]}\n   */\n  async function addLink (cid, link, options = {}) {\n    const node = await get(cid, options)\n\n    return put({\n      ...node,\n      Links: node.Links.concat([link])\n    }, options)\n  }\n\n  return withTimeoutOption(addLink)\n}\n"]},"metadata":{},"sourceType":"script"}