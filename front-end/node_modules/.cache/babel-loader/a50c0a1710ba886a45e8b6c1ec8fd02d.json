{"ast":null,"code":"'use strict';\n\nconst createData = require('./data');\n\nconst createGet = require('./get');\n\nconst createLinks = require('./links');\n\nconst createNew = require('./new');\n\nconst createPut = require('./put');\n\nconst createStat = require('./stat');\n\nconst ObjectPatchAPI = require('./patch');\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\n\nclass ObjectAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor({\n    repo,\n    codecs,\n    preload\n  }) {\n    this.data = createData({\n      repo,\n      preload\n    });\n    this.get = createGet({\n      repo,\n      preload\n    });\n    this.links = createLinks({\n      repo,\n      codecs\n    });\n    this.new = createNew({\n      repo,\n      preload\n    });\n    this.put = createPut({\n      repo,\n      preload\n    });\n    this.stat = createStat({\n      repo,\n      preload\n    });\n    this.patch = new ObjectPatchAPI({\n      repo,\n      preload\n    });\n  }\n\n}\n\nmodule.exports = ObjectAPI;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/object/index.js"],"names":["createData","require","createGet","createLinks","createNew","createPut","createStat","ObjectPatchAPI","ObjectAPI","constructor","repo","codecs","preload","data","get","links","new","put","stat","patch","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,SAAD,CAA3B;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMI,SAAS,GAAGJ,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,QAAD,CAA1B;;AACA,MAAMM,cAAc,GAAGN,OAAO,CAAC,SAAD,CAA9B;AAEA;AACA;AACA;AACA;AACA;;;AAEA,MAAMO,SAAN,CAAgB;AACd;AACF;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAF,EAA6B;AACtC,SAAKC,IAAL,GAAYb,UAAU,CAAC;AAAEU,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAtB;AACA,SAAKE,GAAL,GAAWZ,SAAS,CAAC;AAAEQ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKG,KAAL,GAAaZ,WAAW,CAAC;AAAEO,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAxB;AACA,SAAKK,GAAL,GAAWZ,SAAS,CAAC;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKK,GAAL,GAAWZ,SAAS,CAAC;AAAEK,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAApB;AACA,SAAKM,IAAL,GAAYZ,UAAU,CAAC;AAAEI,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAD,CAAtB;AACA,SAAKO,KAAL,GAAa,IAAIZ,cAAJ,CAAmB;AAAEG,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAAnB,CAAb;AACD;;AAfa;;AAkBhBQ,MAAM,CAACC,OAAP,GAAiBb,SAAjB","sourcesContent":["'use strict'\n\nconst createData = require('./data')\nconst createGet = require('./get')\nconst createLinks = require('./links')\nconst createNew = require('./new')\nconst createPut = require('./put')\nconst createStat = require('./stat')\nconst ObjectPatchAPI = require('./patch')\n\n/**\n * @typedef {import('../../types').Preload} Preload\n * @typedef {import('multiformats/cid').CID} CID\n * @typedef {import('ipfs-core-types/src/utils').AbortOptions} AbortOptions\n */\n\nclass ObjectAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   */\n  constructor ({ repo, codecs, preload }) {\n    this.data = createData({ repo, preload })\n    this.get = createGet({ repo, preload })\n    this.links = createLinks({ repo, codecs })\n    this.new = createNew({ repo, preload })\n    this.put = createPut({ repo, preload })\n    this.stat = createStat({ repo, preload })\n    this.patch = new ObjectPatchAPI({ repo, preload })\n  }\n}\n\nmodule.exports = ObjectAPI\n"]},"metadata":{},"sourceType":"script"}