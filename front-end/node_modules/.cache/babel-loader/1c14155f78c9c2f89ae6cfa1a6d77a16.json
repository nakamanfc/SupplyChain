{"ast":null,"code":"'use strict';\n\nconst createAddAPI = require('./add');\n\nconst createAddAllAPI = require('./add-all');\n\nconst createCatAPI = require('./cat');\n\nconst createGetAPI = require('./get');\n\nconst createLsAPI = require('./ls');\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\n\n\nclass Root {\n  /**\n   * @param {Context} context\n   */\n  constructor({\n    preload,\n    repo,\n    options\n  }) {\n    const addAll = createAddAllAPI({\n      preload,\n      repo,\n      options\n    });\n    this.addAll = addAll;\n    this.add = createAddAPI({\n      addAll\n    });\n    this.cat = createCatAPI({\n      repo,\n      preload\n    });\n    this.get = createGetAPI({\n      repo,\n      preload\n    });\n    this.ls = createLsAPI({\n      repo,\n      preload\n    });\n  }\n\n}\n\nmodule.exports = Root;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/root.js"],"names":["createAddAPI","require","createAddAllAPI","createCatAPI","createGetAPI","createLsAPI","Root","constructor","preload","repo","options","addAll","add","cat","get","ls","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,OAAD,CAA5B;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,WAAD,CAA/B;;AACA,MAAME,YAAY,GAAGF,OAAO,CAAC,OAAD,CAA5B;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,OAAD,CAA5B;;AACA,MAAMI,WAAW,GAAGJ,OAAO,CAAC,MAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMK,IAAN,CAAW;AACT;AACF;AACA;AACEC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAF,EAA8B;AACvC,UAAMC,MAAM,GAAGT,eAAe,CAAC;AAC7BM,MAAAA,OAD6B;AAE7BC,MAAAA,IAF6B;AAG7BC,MAAAA;AAH6B,KAAD,CAA9B;AAMA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,GAAL,GAAWZ,YAAY,CAAC;AAAEW,MAAAA;AAAF,KAAD,CAAvB;AACA,SAAKE,GAAL,GAAWV,YAAY,CAAC;AAAEM,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,CAAvB;AACA,SAAKM,GAAL,GAAWV,YAAY,CAAC;AAAEK,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,CAAvB;AACA,SAAKO,EAAL,GAAUV,WAAW,CAAC;AAAEI,MAAAA,IAAF;AAAQD,MAAAA;AAAR,KAAD,CAArB;AACD;;AAhBQ;;AAmBXQ,MAAM,CAACC,OAAP,GAAiBX,IAAjB","sourcesContent":["'use strict'\n\nconst createAddAPI = require('./add')\nconst createAddAllAPI = require('./add-all')\nconst createCatAPI = require('./cat')\nconst createGetAPI = require('./get')\nconst createLsAPI = require('./ls')\n\n/**\n * @typedef {AddAllContext & CatContext & GetContext & ListContext } Context\n * @typedef {import('./add-all').Context} AddAllContext\n * @typedef {import('./cat').Context} CatContext\n * @typedef {import('./get').Context} GetContext\n * @typedef {import('./ls').Context} ListContext\n */\nclass Root {\n  /**\n   * @param {Context} context\n   */\n  constructor ({ preload, repo, options }) {\n    const addAll = createAddAllAPI({\n      preload,\n      repo,\n      options\n    })\n\n    this.addAll = addAll\n    this.add = createAddAPI({ addAll })\n    this.cat = createCatAPI({ repo, preload })\n    this.get = createGetAPI({ repo, preload })\n    this.ls = createLsAPI({ repo, preload })\n  }\n}\n\nmodule.exports = Root\n"]},"metadata":{},"sourceType":"script"}