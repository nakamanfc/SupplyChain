{"ast":null,"code":"'use strict';\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst inherits = require('util').inherits;\n\nconst DeferredLevelDOWN = require('deferred-leveldown');\n\nconst IteratorStream = require('level-iterator-stream');\n\nconst Batch = require('./batch');\n\nconst errors = require('level-errors');\n\nconst supports = require('level-supports');\n\nconst catering = require('catering');\n\nconst getCallback = require('./common').getCallback;\n\nconst getOptions = require('./common').getOptions; // TODO: after we drop node 10, also use queueMicrotask() in node\n\n\nconst nextTick = require('./next-tick');\n\nconst WriteError = errors.WriteError;\nconst ReadError = errors.ReadError;\nconst NotFoundError = errors.NotFoundError;\nconst OpenError = errors.OpenError;\nconst InitializationError = errors.InitializationError; // Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP(db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback);\n  }\n\n  let error;\n  EventEmitter.call(this);\n  this.setMaxListeners(Infinity);\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store');\n\n    if (typeof callback === 'function') {\n      return nextTick(callback, error);\n    }\n\n    throw error;\n  }\n\n  if (typeof db.status !== 'string') {\n    throw new Error('.status required, old abstract-leveldown');\n  }\n\n  this.options = getOptions(options);\n  this._db = db;\n  this.db = new DeferredLevelDOWN(db);\n  this.open(callback || (err => {\n    if (err) this.emit('error', err);\n  })); // Create manifest based on deferred-leveldown's\n\n  this.supports = supports(this.db.supports, {\n    status: false,\n    deferredOpen: true,\n    openCallback: true,\n    promises: true,\n    streams: true\n  }); // Experimental: enrich levelup interface\n\n  for (const method of Object.keys(this.supports.additionalMethods)) {\n    if (this[method] != null) continue; // Don't do this.db[method].bind() because this.db is dynamic.\n\n    this[method] = function (...args) {\n      return this.db[method](...args);\n    };\n  }\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit;\nLevelUP.prototype.once = EventEmitter.prototype.once;\ninherits(LevelUP, EventEmitter);\n\nLevelUP.prototype.open = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = null;\n  }\n\n  callback = catering.fromCallback(callback);\n\n  if (!opts) {\n    opts = this.options;\n  }\n\n  if (this.isOpen()) {\n    nextTick(callback, null, this);\n    return callback.promise;\n  }\n\n  if (this._isOpening()) {\n    this.once('open', () => {\n      callback(null, this);\n    });\n    return callback.promise;\n  }\n\n  this.emit('opening');\n  this.db.open(opts, err => {\n    if (err) {\n      return callback(new OpenError(err));\n    }\n\n    this.db = this._db;\n    callback(null, this);\n    this.emit('open');\n    this.emit('ready');\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.close = function (callback) {\n  callback = catering.fromCallback(callback);\n\n  if (this.isOpen()) {\n    this.db.close((err, ...rest) => {\n      this.emit('closed');\n      callback(err, ...rest);\n    });\n    this.emit('closing');\n    this.db = new DeferredLevelDOWN(this._db);\n  } else if (this.isClosed()) {\n    nextTick(callback);\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback);\n  } else if (this._isOpening()) {\n    this.once('open', () => {\n      this.close(callback);\n    });\n  }\n\n  return callback.promise;\n};\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open';\n};\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening';\n};\n\nLevelUP.prototype.isClosed = function () {\n  return /^clos|new/.test(this.db.status);\n};\n\nLevelUP.prototype.get = function (key, options, callback) {\n  callback = getCallback(options, callback);\n  callback = catering.fromCallback(callback);\n\n  if (maybeError(this, callback)) {\n    return callback.promise;\n  }\n\n  options = getOptions(options);\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if (/notfound/i.test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err);\n      } else {\n        err = new ReadError(err);\n      }\n\n      return callback(err);\n    }\n\n    callback(null, value);\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  callback = getCallback(options, callback);\n  callback = catering.fromCallback(callback);\n\n  if (maybeError(this, callback)) {\n    return callback.promise;\n  }\n\n  options = getOptions(options);\n  this.db.put(key, value, options, err => {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    this.emit('put', key, value);\n    callback();\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.del = function (key, options, callback) {\n  callback = getCallback(options, callback);\n  callback = catering.fromCallback(callback);\n\n  if (maybeError(this, callback)) {\n    return callback.promise;\n  }\n\n  options = getOptions(options);\n  this.db.del(key, options, err => {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    this.emit('del', key);\n    callback();\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this);\n  }\n\n  if (typeof arr === 'function') callback = arr;else callback = getCallback(options, callback);\n  callback = catering.fromCallback(callback);\n\n  if (maybeError(this, callback)) {\n    return callback.promise;\n  }\n\n  options = getOptions(options);\n  this.db.batch(arr, options, err => {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    this.emit('batch', arr);\n    callback();\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options);\n};\n\nLevelUP.prototype.clear = function (options, callback) {\n  callback = getCallback(options, callback);\n  options = getOptions(options);\n  callback = catering.fromCallback(callback);\n\n  if (maybeError(this, callback)) {\n    return callback.promise;\n  }\n\n  this.db.clear(options, err => {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    this.emit('clear', options);\n    callback();\n  });\n  return callback.promise;\n};\n\nLevelUP.prototype.readStream = LevelUP.prototype.createReadStream = function (options) {\n  options = Object.assign({\n    keys: true,\n    values: true\n  }, options);\n\n  if (typeof options.limit !== 'number') {\n    options.limit = -1;\n  }\n\n  return new IteratorStream(this.db.iterator(options), options);\n};\n\nLevelUP.prototype.keyStream = LevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(Object.assign({}, options, {\n    keys: true,\n    values: false\n  }));\n};\n\nLevelUP.prototype.valueStream = LevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(Object.assign({}, options, {\n    keys: false,\n    values: true\n  }));\n};\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP';\n};\n\nLevelUP.prototype.type = 'levelup';\n\nfunction maybeError(db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    nextTick(callback, new ReadError('Database is not open'));\n    return true;\n  }\n}\n\nLevelUP.errors = errors;\nmodule.exports = LevelUP;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/levelup/lib/levelup.js"],"names":["EventEmitter","require","inherits","DeferredLevelDOWN","IteratorStream","Batch","errors","supports","catering","getCallback","getOptions","nextTick","WriteError","ReadError","NotFoundError","OpenError","InitializationError","LevelUP","db","options","callback","error","call","setMaxListeners","Infinity","status","Error","_db","open","err","emit","deferredOpen","openCallback","promises","streams","method","Object","keys","additionalMethods","args","prototype","once","opts","fromCallback","isOpen","promise","_isOpening","close","rest","isClosed","test","get","key","maybeError","value","notFound","put","del","batch","arr","arguments","length","iterator","clear","readStream","createReadStream","assign","values","limit","keyStream","createKeyStream","valueStream","createValueStream","toString","type","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,YAAvC;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,MAAD,CAAP,CAAgBC,QAAjC;;AACA,MAAMC,iBAAiB,GAAGF,OAAO,CAAC,oBAAD,CAAjC;;AACA,MAAMG,cAAc,GAAGH,OAAO,CAAC,uBAAD,CAA9B;;AACA,MAAMI,KAAK,GAAGJ,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,cAAD,CAAtB;;AACA,MAAMM,QAAQ,GAAGN,OAAO,CAAC,gBAAD,CAAxB;;AACA,MAAMO,QAAQ,GAAGP,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMQ,WAAW,GAAGR,OAAO,CAAC,UAAD,CAAP,CAAoBQ,WAAxC;;AACA,MAAMC,UAAU,GAAGT,OAAO,CAAC,UAAD,CAAP,CAAoBS,UAAvC,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGV,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMW,UAAU,GAAGN,MAAM,CAACM,UAA1B;AACA,MAAMC,SAAS,GAAGP,MAAM,CAACO,SAAzB;AACA,MAAMC,aAAa,GAAGR,MAAM,CAACQ,aAA7B;AACA,MAAMC,SAAS,GAAGT,MAAM,CAACS,SAAzB;AACA,MAAMC,mBAAmB,GAAGV,MAAM,CAACU,mBAAnC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAkBC,EAAlB,EAAsBC,OAAtB,EAA+BC,QAA/B,EAAyC;AACvC,MAAI,EAAE,gBAAgBH,OAAlB,CAAJ,EAAgC;AAC9B,WAAO,IAAIA,OAAJ,CAAYC,EAAZ,EAAgBC,OAAhB,EAAyBC,QAAzB,CAAP;AACD;;AAED,MAAIC,KAAJ;AAEArB,EAAAA,YAAY,CAACsB,IAAb,CAAkB,IAAlB;AACA,OAAKC,eAAL,CAAqBC,QAArB;;AAEA,MAAI,OAAOL,OAAP,KAAmB,UAAvB,EAAmC;AACjCC,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAEDA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,MAAI,CAACD,EAAD,IAAO,OAAOA,EAAP,KAAc,QAAzB,EAAmC;AACjCG,IAAAA,KAAK,GAAG,IAAIL,mBAAJ,CAAwB,8DAAxB,CAAR;;AACA,QAAI,OAAOI,QAAP,KAAoB,UAAxB,EAAoC;AAClC,aAAOT,QAAQ,CAACS,QAAD,EAAWC,KAAX,CAAf;AACD;;AACD,UAAMA,KAAN;AACD;;AAED,MAAI,OAAOH,EAAE,CAACO,MAAV,KAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAIC,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,OAAKP,OAAL,GAAeT,UAAU,CAACS,OAAD,CAAzB;AACA,OAAKQ,GAAL,GAAWT,EAAX;AACA,OAAKA,EAAL,GAAU,IAAIf,iBAAJ,CAAsBe,EAAtB,CAAV;AACA,OAAKU,IAAL,CAAUR,QAAQ,KAAMS,GAAD,IAAS;AAC9B,QAAIA,GAAJ,EAAS,KAAKC,IAAL,CAAU,OAAV,EAAmBD,GAAnB;AACV,GAFiB,CAAlB,EAhCuC,CAoCvC;;AACA,OAAKtB,QAAL,GAAgBA,QAAQ,CAAC,KAAKW,EAAL,CAAQX,QAAT,EAAmB;AACzCkB,IAAAA,MAAM,EAAE,KADiC;AAEzCM,IAAAA,YAAY,EAAE,IAF2B;AAGzCC,IAAAA,YAAY,EAAE,IAH2B;AAIzCC,IAAAA,QAAQ,EAAE,IAJ+B;AAKzCC,IAAAA,OAAO,EAAE;AALgC,GAAnB,CAAxB,CArCuC,CA6CvC;;AACA,OAAK,MAAMC,MAAX,IAAqBC,MAAM,CAACC,IAAP,CAAY,KAAK9B,QAAL,CAAc+B,iBAA1B,CAArB,EAAmE;AACjE,QAAI,KAAKH,MAAL,KAAgB,IAApB,EAA0B,SADuC,CAGjE;;AACA,SAAKA,MAAL,IAAe,UAAU,GAAGI,IAAb,EAAmB;AAChC,aAAO,KAAKrB,EAAL,CAAQiB,MAAR,EAAgB,GAAGI,IAAnB,CAAP;AACD,KAFD;AAGD;AACF;;AAEDtB,OAAO,CAACuB,SAAR,CAAkBV,IAAlB,GAAyB9B,YAAY,CAACwC,SAAb,CAAuBV,IAAhD;AACAb,OAAO,CAACuB,SAAR,CAAkBC,IAAlB,GAAyBzC,YAAY,CAACwC,SAAb,CAAuBC,IAAhD;AACAvC,QAAQ,CAACe,OAAD,EAAUjB,YAAV,CAAR;;AAEAiB,OAAO,CAACuB,SAAR,CAAkBZ,IAAlB,GAAyB,UAAUc,IAAV,EAAgBtB,QAAhB,EAA0B;AACjD,MAAI,OAAOsB,IAAP,KAAgB,UAApB,EAAgC;AAC9BtB,IAAAA,QAAQ,GAAGsB,IAAX;AACAA,IAAAA,IAAI,GAAG,IAAP;AACD;;AAEDtB,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAI,CAACsB,IAAL,EAAW;AACTA,IAAAA,IAAI,GAAG,KAAKvB,OAAZ;AACD;;AAED,MAAI,KAAKyB,MAAL,EAAJ,EAAmB;AACjBjC,IAAAA,QAAQ,CAACS,QAAD,EAAW,IAAX,EAAiB,IAAjB,CAAR;AACA,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED,MAAI,KAAKC,UAAL,EAAJ,EAAuB;AACrB,SAAKL,IAAL,CAAU,MAAV,EAAkB,MAAM;AAAErB,MAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AAAsB,KAAhD;AACA,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED,OAAKf,IAAL,CAAU,SAAV;AAEA,OAAKZ,EAAL,CAAQU,IAAR,CAAac,IAAb,EAAoBb,GAAD,IAAS;AAC1B,QAAIA,GAAJ,EAAS;AACP,aAAOT,QAAQ,CAAC,IAAIL,SAAJ,CAAcc,GAAd,CAAD,CAAf;AACD;;AACD,SAAKX,EAAL,GAAU,KAAKS,GAAf;AACAP,IAAAA,QAAQ,CAAC,IAAD,EAAO,IAAP,CAAR;AACA,SAAKU,IAAL,CAAU,MAAV;AACA,SAAKA,IAAL,CAAU,OAAV;AACD,GARD;AAUA,SAAOV,QAAQ,CAACyB,OAAhB;AACD,CAnCD;;AAqCA5B,OAAO,CAACuB,SAAR,CAAkBO,KAAlB,GAA0B,UAAU3B,QAAV,EAAoB;AAC5CA,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAI,KAAKwB,MAAL,EAAJ,EAAmB;AACjB,SAAK1B,EAAL,CAAQ6B,KAAR,CAAc,CAAClB,GAAD,EAAM,GAAGmB,IAAT,KAAkB;AAC9B,WAAKlB,IAAL,CAAU,QAAV;AACAV,MAAAA,QAAQ,CAACS,GAAD,EAAM,GAAGmB,IAAT,CAAR;AACD,KAHD;AAIA,SAAKlB,IAAL,CAAU,SAAV;AACA,SAAKZ,EAAL,GAAU,IAAIf,iBAAJ,CAAsB,KAAKwB,GAA3B,CAAV;AACD,GAPD,MAOO,IAAI,KAAKsB,QAAL,EAAJ,EAAqB;AAC1BtC,IAAAA,QAAQ,CAACS,QAAD,CAAR;AACD,GAFM,MAEA,IAAI,KAAKF,EAAL,CAAQO,MAAR,KAAmB,SAAvB,EAAkC;AACvC,SAAKgB,IAAL,CAAU,QAAV,EAAoBrB,QAApB;AACD,GAFM,MAEA,IAAI,KAAK0B,UAAL,EAAJ,EAAuB;AAC5B,SAAKL,IAAL,CAAU,MAAV,EAAkB,MAAM;AACtB,WAAKM,KAAL,CAAW3B,QAAX;AACD,KAFD;AAGD;;AAED,SAAOA,QAAQ,CAACyB,OAAhB;AACD,CArBD;;AAuBA5B,OAAO,CAACuB,SAAR,CAAkBI,MAAlB,GAA2B,YAAY;AACrC,SAAO,KAAK1B,EAAL,CAAQO,MAAR,KAAmB,MAA1B;AACD,CAFD;;AAIAR,OAAO,CAACuB,SAAR,CAAkBM,UAAlB,GAA+B,YAAY;AACzC,SAAO,KAAK5B,EAAL,CAAQO,MAAR,KAAmB,SAA1B;AACD,CAFD;;AAIAR,OAAO,CAACuB,SAAR,CAAkBS,QAAlB,GAA6B,YAAY;AACvC,SAAQ,WAAD,CAAcC,IAAd,CAAmB,KAAKhC,EAAL,CAAQO,MAA3B,CAAP;AACD,CAFD;;AAIAR,OAAO,CAACuB,SAAR,CAAkBW,GAAlB,GAAwB,UAAUC,GAAV,EAAejC,OAAf,EAAwBC,QAAxB,EAAkC;AACxDA,EAAAA,QAAQ,GAAGX,WAAW,CAACU,OAAD,EAAUC,QAAV,CAAtB;AACAA,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAIiC,UAAU,CAAC,IAAD,EAAOjC,QAAP,CAAd,EAAgC;AAC9B,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED1B,EAAAA,OAAO,GAAGT,UAAU,CAACS,OAAD,CAApB;AAEA,OAAKD,EAAL,CAAQiC,GAAR,CAAYC,GAAZ,EAAiBjC,OAAjB,EAA0B,UAAUU,GAAV,EAAeyB,KAAf,EAAsB;AAC9C,QAAIzB,GAAJ,EAAS;AACP,UAAK,WAAD,CAAcqB,IAAd,CAAmBrB,GAAnB,KAA2BA,GAAG,CAAC0B,QAAnC,EAA6C;AAC3C1B,QAAAA,GAAG,GAAG,IAAIf,aAAJ,CAAkB,gCAAgCsC,GAAhC,GAAsC,GAAxD,EAA6DvB,GAA7D,CAAN;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,GAAG,IAAIhB,SAAJ,CAAcgB,GAAd,CAAN;AACD;;AACD,aAAOT,QAAQ,CAACS,GAAD,CAAf;AACD;;AACDT,IAAAA,QAAQ,CAAC,IAAD,EAAOkC,KAAP,CAAR;AACD,GAVD;AAYA,SAAOlC,QAAQ,CAACyB,OAAhB;AACD,CAvBD;;AAyBA5B,OAAO,CAACuB,SAAR,CAAkBgB,GAAlB,GAAwB,UAAUJ,GAAV,EAAeE,KAAf,EAAsBnC,OAAtB,EAA+BC,QAA/B,EAAyC;AAC/DA,EAAAA,QAAQ,GAAGX,WAAW,CAACU,OAAD,EAAUC,QAAV,CAAtB;AACAA,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAIiC,UAAU,CAAC,IAAD,EAAOjC,QAAP,CAAd,EAAgC;AAC9B,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED1B,EAAAA,OAAO,GAAGT,UAAU,CAACS,OAAD,CAApB;AAEA,OAAKD,EAAL,CAAQsC,GAAR,CAAYJ,GAAZ,EAAiBE,KAAjB,EAAwBnC,OAAxB,EAAkCU,GAAD,IAAS;AACxC,QAAIA,GAAJ,EAAS;AACP,aAAOT,QAAQ,CAAC,IAAIR,UAAJ,CAAeiB,GAAf,CAAD,CAAf;AACD;;AACD,SAAKC,IAAL,CAAU,KAAV,EAAiBsB,GAAjB,EAAsBE,KAAtB;AACAlC,IAAAA,QAAQ;AACT,GAND;AAQA,SAAOA,QAAQ,CAACyB,OAAhB;AACD,CAnBD;;AAqBA5B,OAAO,CAACuB,SAAR,CAAkBiB,GAAlB,GAAwB,UAAUL,GAAV,EAAejC,OAAf,EAAwBC,QAAxB,EAAkC;AACxDA,EAAAA,QAAQ,GAAGX,WAAW,CAACU,OAAD,EAAUC,QAAV,CAAtB;AACAA,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAIiC,UAAU,CAAC,IAAD,EAAOjC,QAAP,CAAd,EAAgC;AAC9B,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED1B,EAAAA,OAAO,GAAGT,UAAU,CAACS,OAAD,CAApB;AAEA,OAAKD,EAAL,CAAQuC,GAAR,CAAYL,GAAZ,EAAiBjC,OAAjB,EAA2BU,GAAD,IAAS;AACjC,QAAIA,GAAJ,EAAS;AACP,aAAOT,QAAQ,CAAC,IAAIR,UAAJ,CAAeiB,GAAf,CAAD,CAAf;AACD;;AACD,SAAKC,IAAL,CAAU,KAAV,EAAiBsB,GAAjB;AACAhC,IAAAA,QAAQ;AACT,GAND;AAQA,SAAOA,QAAQ,CAACyB,OAAhB;AACD,CAnBD;;AAqBA5B,OAAO,CAACuB,SAAR,CAAkBkB,KAAlB,GAA0B,UAAUC,GAAV,EAAexC,OAAf,EAAwBC,QAAxB,EAAkC;AAC1D,MAAI,CAACwC,SAAS,CAACC,MAAf,EAAuB;AACrB,WAAO,IAAIxD,KAAJ,CAAU,IAAV,CAAP;AACD;;AAED,MAAI,OAAOsD,GAAP,KAAe,UAAnB,EAA+BvC,QAAQ,GAAGuC,GAAX,CAA/B,KACKvC,QAAQ,GAAGX,WAAW,CAACU,OAAD,EAAUC,QAAV,CAAtB;AAELA,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAIiC,UAAU,CAAC,IAAD,EAAOjC,QAAP,CAAd,EAAgC;AAC9B,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED1B,EAAAA,OAAO,GAAGT,UAAU,CAACS,OAAD,CAApB;AAEA,OAAKD,EAAL,CAAQwC,KAAR,CAAcC,GAAd,EAAmBxC,OAAnB,EAA6BU,GAAD,IAAS;AACnC,QAAIA,GAAJ,EAAS;AACP,aAAOT,QAAQ,CAAC,IAAIR,UAAJ,CAAeiB,GAAf,CAAD,CAAf;AACD;;AACD,SAAKC,IAAL,CAAU,OAAV,EAAmB6B,GAAnB;AACAvC,IAAAA,QAAQ;AACT,GAND;AAQA,SAAOA,QAAQ,CAACyB,OAAhB;AACD,CAzBD;;AA2BA5B,OAAO,CAACuB,SAAR,CAAkBsB,QAAlB,GAA6B,UAAU3C,OAAV,EAAmB;AAC9C,SAAO,KAAKD,EAAL,CAAQ4C,QAAR,CAAiB3C,OAAjB,CAAP;AACD,CAFD;;AAIAF,OAAO,CAACuB,SAAR,CAAkBuB,KAAlB,GAA0B,UAAU5C,OAAV,EAAmBC,QAAnB,EAA6B;AACrDA,EAAAA,QAAQ,GAAGX,WAAW,CAACU,OAAD,EAAUC,QAAV,CAAtB;AACAD,EAAAA,OAAO,GAAGT,UAAU,CAACS,OAAD,CAApB;AACAC,EAAAA,QAAQ,GAAGZ,QAAQ,CAACmC,YAAT,CAAsBvB,QAAtB,CAAX;;AAEA,MAAIiC,UAAU,CAAC,IAAD,EAAOjC,QAAP,CAAd,EAAgC;AAC9B,WAAOA,QAAQ,CAACyB,OAAhB;AACD;;AAED,OAAK3B,EAAL,CAAQ6C,KAAR,CAAc5C,OAAd,EAAwBU,GAAD,IAAS;AAC9B,QAAIA,GAAJ,EAAS;AACP,aAAOT,QAAQ,CAAC,IAAIR,UAAJ,CAAeiB,GAAf,CAAD,CAAf;AACD;;AACD,SAAKC,IAAL,CAAU,OAAV,EAAmBX,OAAnB;AACAC,IAAAA,QAAQ;AACT,GAND;AAQA,SAAOA,QAAQ,CAACyB,OAAhB;AACD,CAlBD;;AAoBA5B,OAAO,CAACuB,SAAR,CAAkBwB,UAAlB,GACA/C,OAAO,CAACuB,SAAR,CAAkByB,gBAAlB,GAAqC,UAAU9C,OAAV,EAAmB;AACtDA,EAAAA,OAAO,GAAGiB,MAAM,CAAC8B,MAAP,CAAc;AAAE7B,IAAAA,IAAI,EAAE,IAAR;AAAc8B,IAAAA,MAAM,EAAE;AAAtB,GAAd,EAA4ChD,OAA5C,CAAV;;AACA,MAAI,OAAOA,OAAO,CAACiD,KAAf,KAAyB,QAA7B,EAAuC;AAAEjD,IAAAA,OAAO,CAACiD,KAAR,GAAgB,CAAC,CAAjB;AAAoB;;AAC7D,SAAO,IAAIhE,cAAJ,CAAmB,KAAKc,EAAL,CAAQ4C,QAAR,CAAiB3C,OAAjB,CAAnB,EAA8CA,OAA9C,CAAP;AACD,CALD;;AAOAF,OAAO,CAACuB,SAAR,CAAkB6B,SAAlB,GACApD,OAAO,CAACuB,SAAR,CAAkB8B,eAAlB,GAAoC,UAAUnD,OAAV,EAAmB;AACrD,SAAO,KAAK8C,gBAAL,CAAsB7B,MAAM,CAAC8B,MAAP,CAAc,EAAd,EAAkB/C,OAAlB,EAA2B;AAAEkB,IAAAA,IAAI,EAAE,IAAR;AAAc8B,IAAAA,MAAM,EAAE;AAAtB,GAA3B,CAAtB,CAAP;AACD,CAHD;;AAKAlD,OAAO,CAACuB,SAAR,CAAkB+B,WAAlB,GACAtD,OAAO,CAACuB,SAAR,CAAkBgC,iBAAlB,GAAsC,UAAUrD,OAAV,EAAmB;AACvD,SAAO,KAAK8C,gBAAL,CAAsB7B,MAAM,CAAC8B,MAAP,CAAc,EAAd,EAAkB/C,OAAlB,EAA2B;AAAEkB,IAAAA,IAAI,EAAE,KAAR;AAAe8B,IAAAA,MAAM,EAAE;AAAvB,GAA3B,CAAtB,CAAP;AACD,CAHD;;AAKAlD,OAAO,CAACuB,SAAR,CAAkBiC,QAAlB,GAA6B,YAAY;AACvC,SAAO,SAAP;AACD,CAFD;;AAIAxD,OAAO,CAACuB,SAAR,CAAkBkC,IAAlB,GAAyB,SAAzB;;AAEA,SAASrB,UAAT,CAAqBnC,EAArB,EAAyBE,QAAzB,EAAmC;AACjC,MAAI,CAACF,EAAE,CAAC4B,UAAH,EAAD,IAAoB,CAAC5B,EAAE,CAAC0B,MAAH,EAAzB,EAAsC;AACpCjC,IAAAA,QAAQ,CAACS,QAAD,EAAW,IAAIP,SAAJ,CAAc,sBAAd,CAAX,CAAR;AACA,WAAO,IAAP;AACD;AACF;;AAEDI,OAAO,CAACX,MAAR,GAAiBA,MAAjB;AACAqE,MAAM,CAACC,OAAP,GAAiB3D,OAAjB","sourcesContent":["'use strict'\n\nconst EventEmitter = require('events').EventEmitter\nconst inherits = require('util').inherits\nconst DeferredLevelDOWN = require('deferred-leveldown')\nconst IteratorStream = require('level-iterator-stream')\nconst Batch = require('./batch')\nconst errors = require('level-errors')\nconst supports = require('level-supports')\nconst catering = require('catering')\nconst getCallback = require('./common').getCallback\nconst getOptions = require('./common').getOptions\n\n// TODO: after we drop node 10, also use queueMicrotask() in node\nconst nextTick = require('./next-tick')\n\nconst WriteError = errors.WriteError\nconst ReadError = errors.ReadError\nconst NotFoundError = errors.NotFoundError\nconst OpenError = errors.OpenError\nconst InitializationError = errors.InitializationError\n\n// Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP (db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback)\n  }\n\n  let error\n\n  EventEmitter.call(this)\n  this.setMaxListeners(Infinity)\n\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options = options || {}\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store')\n    if (typeof callback === 'function') {\n      return nextTick(callback, error)\n    }\n    throw error\n  }\n\n  if (typeof db.status !== 'string') {\n    throw new Error('.status required, old abstract-leveldown')\n  }\n\n  this.options = getOptions(options)\n  this._db = db\n  this.db = new DeferredLevelDOWN(db)\n  this.open(callback || ((err) => {\n    if (err) this.emit('error', err)\n  }))\n\n  // Create manifest based on deferred-leveldown's\n  this.supports = supports(this.db.supports, {\n    status: false,\n    deferredOpen: true,\n    openCallback: true,\n    promises: true,\n    streams: true\n  })\n\n  // Experimental: enrich levelup interface\n  for (const method of Object.keys(this.supports.additionalMethods)) {\n    if (this[method] != null) continue\n\n    // Don't do this.db[method].bind() because this.db is dynamic.\n    this[method] = function (...args) {\n      return this.db[method](...args)\n    }\n  }\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit\nLevelUP.prototype.once = EventEmitter.prototype.once\ninherits(LevelUP, EventEmitter)\n\nLevelUP.prototype.open = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = null\n  }\n\n  callback = catering.fromCallback(callback)\n\n  if (!opts) {\n    opts = this.options\n  }\n\n  if (this.isOpen()) {\n    nextTick(callback, null, this)\n    return callback.promise\n  }\n\n  if (this._isOpening()) {\n    this.once('open', () => { callback(null, this) })\n    return callback.promise\n  }\n\n  this.emit('opening')\n\n  this.db.open(opts, (err) => {\n    if (err) {\n      return callback(new OpenError(err))\n    }\n    this.db = this._db\n    callback(null, this)\n    this.emit('open')\n    this.emit('ready')\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.close = function (callback) {\n  callback = catering.fromCallback(callback)\n\n  if (this.isOpen()) {\n    this.db.close((err, ...rest) => {\n      this.emit('closed')\n      callback(err, ...rest)\n    })\n    this.emit('closing')\n    this.db = new DeferredLevelDOWN(this._db)\n  } else if (this.isClosed()) {\n    nextTick(callback)\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback)\n  } else if (this._isOpening()) {\n    this.once('open', () => {\n      this.close(callback)\n    })\n  }\n\n  return callback.promise\n}\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open'\n}\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening'\n}\n\nLevelUP.prototype.isClosed = function () {\n  return (/^clos|new/).test(this.db.status)\n}\n\nLevelUP.prototype.get = function (key, options, callback) {\n  callback = getCallback(options, callback)\n  callback = catering.fromCallback(callback)\n\n  if (maybeError(this, callback)) {\n    return callback.promise\n  }\n\n  options = getOptions(options)\n\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if ((/notfound/i).test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err)\n      } else {\n        err = new ReadError(err)\n      }\n      return callback(err)\n    }\n    callback(null, value)\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  callback = getCallback(options, callback)\n  callback = catering.fromCallback(callback)\n\n  if (maybeError(this, callback)) {\n    return callback.promise\n  }\n\n  options = getOptions(options)\n\n  this.db.put(key, value, options, (err) => {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    this.emit('put', key, value)\n    callback()\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.del = function (key, options, callback) {\n  callback = getCallback(options, callback)\n  callback = catering.fromCallback(callback)\n\n  if (maybeError(this, callback)) {\n    return callback.promise\n  }\n\n  options = getOptions(options)\n\n  this.db.del(key, options, (err) => {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    this.emit('del', key)\n    callback()\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this)\n  }\n\n  if (typeof arr === 'function') callback = arr\n  else callback = getCallback(options, callback)\n\n  callback = catering.fromCallback(callback)\n\n  if (maybeError(this, callback)) {\n    return callback.promise\n  }\n\n  options = getOptions(options)\n\n  this.db.batch(arr, options, (err) => {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    this.emit('batch', arr)\n    callback()\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options)\n}\n\nLevelUP.prototype.clear = function (options, callback) {\n  callback = getCallback(options, callback)\n  options = getOptions(options)\n  callback = catering.fromCallback(callback)\n\n  if (maybeError(this, callback)) {\n    return callback.promise\n  }\n\n  this.db.clear(options, (err) => {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    this.emit('clear', options)\n    callback()\n  })\n\n  return callback.promise\n}\n\nLevelUP.prototype.readStream =\nLevelUP.prototype.createReadStream = function (options) {\n  options = Object.assign({ keys: true, values: true }, options)\n  if (typeof options.limit !== 'number') { options.limit = -1 }\n  return new IteratorStream(this.db.iterator(options), options)\n}\n\nLevelUP.prototype.keyStream =\nLevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(Object.assign({}, options, { keys: true, values: false }))\n}\n\nLevelUP.prototype.valueStream =\nLevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(Object.assign({}, options, { keys: false, values: true }))\n}\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP'\n}\n\nLevelUP.prototype.type = 'levelup'\n\nfunction maybeError (db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    nextTick(callback, new ReadError('Database is not open'))\n    return true\n  }\n}\n\nLevelUP.errors = errors\nmodule.exports = LevelUP\n"]},"metadata":{},"sourceType":"script"}