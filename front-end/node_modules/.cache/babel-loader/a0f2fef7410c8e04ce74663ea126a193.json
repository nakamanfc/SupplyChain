{"ast":null,"code":"'use strict';\n\nconst createGet = require('./get');\n\nconst createPut = require('./put');\n\nconst createRm = require('./rm');\n\nconst createStat = require('./stat');\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\n\nclass BlockAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor({\n    codecs,\n    hashers,\n    preload,\n    repo\n  }) {\n    this.get = createGet({\n      preload,\n      repo\n    });\n    this.put = createPut({\n      codecs,\n      hashers,\n      preload,\n      repo\n    });\n    this.rm = createRm({\n      repo\n    });\n    this.stat = createStat({\n      preload,\n      repo\n    });\n  }\n\n}\n\nmodule.exports = BlockAPI;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-core/src/components/block/index.js"],"names":["createGet","require","createPut","createRm","createStat","BlockAPI","constructor","codecs","hashers","preload","repo","get","put","rm","stat","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,OAAD,CAAzB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,MAAD,CAAxB;;AACA,MAAMG,UAAU,GAAGH,OAAO,CAAC,QAAD,CAA1B;AAEA;AACA;AACA;;;AAEA,MAAMI,QAAN,CAAe;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,EAAAA,WAAW,CAAE;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,OAAnB;AAA4BC,IAAAA;AAA5B,GAAF,EAAsC;AAC/C,SAAKC,GAAL,GAAWX,SAAS,CAAC;AAAES,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAApB;AACA,SAAKE,GAAL,GAAWV,SAAS,CAAC;AAAEK,MAAAA,MAAF;AAAUC,MAAAA,OAAV;AAAmBC,MAAAA,OAAnB;AAA4BC,MAAAA;AAA5B,KAAD,CAApB;AACA,SAAKG,EAAL,GAAUV,QAAQ,CAAC;AAAEO,MAAAA;AAAF,KAAD,CAAlB;AACA,SAAKI,IAAL,GAAYV,UAAU,CAAC;AAAEK,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAD,CAAtB;AACD;;AAbY;;AAgBfK,MAAM,CAACC,OAAP,GAAiBX,QAAjB","sourcesContent":["'use strict'\n\nconst createGet = require('./get')\nconst createPut = require('./put')\nconst createRm = require('./rm')\nconst createStat = require('./stat')\n\n/**\n * @typedef {import('../../types').Preload} Preload\n */\n\nclass BlockAPI {\n  /**\n   * @param {Object} config\n   * @param {import('ipfs-core-utils/src/multihashes')} config.hashers\n   * @param {import('ipfs-core-utils/src/multicodecs')} config.codecs\n   * @param {Preload} config.preload\n   * @param {import('ipfs-repo').IPFSRepo} config.repo\n   */\n  constructor ({ codecs, hashers, preload, repo }) {\n    this.get = createGet({ preload, repo })\n    this.put = createPut({ codecs, hashers, preload, repo })\n    this.rm = createRm({ repo })\n    this.stat = createStat({ preload, repo })\n  }\n}\n\nmodule.exports = BlockAPI\n"]},"metadata":{},"sourceType":"script"}