{"ast":null,"code":"'use strict';\n\nconst {\n  sortAll\n} = require('./utils');\n\nconst drain = require('it-drain');\n\nconst filter = require('it-filter');\n\nconst take = require('it-take');\n/**\n * @typedef {import('interface-store').Options} Options\n * @typedef {import('./key')} Key\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Datastore} Datastore\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQuery} KeyQuery\n * @typedef {import('./types').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\n\n\nclass Adapter {\n  /**\n   * @returns {Promise<void>}\n   */\n  open() {\n    return Promise.reject(new Error('.open is not implemented'));\n  }\n  /**\n   * @returns {Promise<void>}\n   */\n\n\n  close() {\n    return Promise.reject(new Error('.close is not implemented'));\n  }\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n\n\n  put(key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'));\n  }\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n\n\n  get(key, options) {\n    return Promise.reject(new Error('.get is not implemented'));\n  }\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n\n\n  has(key, options) {\n    return Promise.reject(new Error('.has is not implemented'));\n  }\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n\n\n  delete(key, options) {\n    return Promise.reject(new Error('.delete is not implemented'));\n  }\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n\n\n  async *putMany(source, options = {}) {\n    for await (const {\n      key,\n      value\n    } of source) {\n      await this.put(key, value, options);\n      yield {\n        key,\n        value\n      };\n    }\n  }\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n\n\n  async *getMany(source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options);\n    }\n  }\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n\n\n  async *deleteMany(source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options);\n      yield key;\n    }\n  }\n  /**\n   * @returns {Batch}\n   */\n\n\n  batch() {\n    /** @type {Pair[]} */\n    let puts = [];\n    /** @type {Key[]} */\n\n    let dels = [];\n    return {\n      put(key, value) {\n        puts.push({\n          key,\n          value\n        });\n      },\n\n      delete(key) {\n        dels.push(key);\n      },\n\n      commit: async options => {\n        await drain(this.putMany(puts, options));\n        puts = [];\n        await drain(this.deleteMany(dels, options));\n        dels = [];\n      }\n    };\n  }\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n\n\n  async *_all(q, options) {\n    throw new Error('._all is not implemented');\n  }\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  // eslint-disable-next-line require-yield\n\n\n  async *_allKeys(q, options) {\n    throw new Error('._allKeys is not implemented');\n  }\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n\n\n  query(q, options) {\n    let it = this._all(q, options);\n\n    if (q.prefix != null) {\n      it = filter(it, e => e.key.toString().startsWith(\n      /** @type {string} */\n      q.prefix));\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >=\n      /** @type {number} */\n      q.offset);\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n\n    return it;\n  }\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n\n\n  queryKeys(q, options) {\n    let it = this._allKeys(q, options);\n\n    if (q.prefix != null) {\n      it = filter(it, key => key.toString().startsWith(\n      /** @type {string} */\n      q.prefix));\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it);\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it);\n    }\n\n    if (q.offset != null) {\n      let i = 0;\n      it = filter(it, () => i++ >=\n      /** @type {number} */\n      q.offset);\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit);\n    }\n\n    return it;\n  }\n\n}\n\nmodule.exports = Adapter;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/interface-datastore/src/adapter.js"],"names":["sortAll","require","drain","filter","take","Adapter","open","Promise","reject","Error","close","put","key","val","options","get","has","delete","putMany","source","value","getMany","deleteMany","batch","puts","dels","push","commit","_all","q","_allKeys","query","it","prefix","e","toString","startsWith","Array","isArray","filters","reduce","f","orders","offset","i","limit","queryKeys","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst { sortAll } = require('./utils')\nconst drain = require('it-drain')\nconst filter = require('it-filter')\nconst take = require('it-take')\n\n/**\n * @typedef {import('interface-store').Options} Options\n * @typedef {import('./key')} Key\n * @typedef {import('./types').Pair} Pair\n * @typedef {import('./types').Datastore} Datastore\n * @typedef {import('./types').Query} Query\n * @typedef {import('./types').KeyQuery} KeyQuery\n * @typedef {import('./types').Batch} Batch\n */\n\n/**\n * @template O\n * @typedef {import('interface-store').AwaitIterable<O>} AwaitIterable\n */\n\n/**\n * @implements {Datastore}\n */\nclass Adapter {\n  /**\n   * @returns {Promise<void>}\n   */\n  open () {\n    return Promise.reject(new Error('.open is not implemented'))\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  close () {\n    return Promise.reject(new Error('.close is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Uint8Array} val\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  put (key, val, options) {\n    return Promise.reject(new Error('.put is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<Uint8Array>}\n   */\n  get (key, options) {\n    return Promise.reject(new Error('.get is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<boolean>}\n   */\n  has (key, options) {\n    return Promise.reject(new Error('.has is not implemented'))\n  }\n\n  /**\n   * @param {Key} key\n   * @param {Options} [options]\n   * @returns {Promise<void>}\n   */\n  delete (key, options) {\n    return Promise.reject(new Error('.delete is not implemented'))\n  }\n\n  /**\n   * @param {AwaitIterable<Pair>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  async * putMany (source, options = {}) {\n    for await (const { key, value } of source) {\n      await this.put(key, value, options)\n      yield { key, value }\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Uint8Array>}\n   */\n  async * getMany (source, options = {}) {\n    for await (const key of source) {\n      yield this.get(key, options)\n    }\n  }\n\n  /**\n   * @param {AwaitIterable<Key>} source\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  async * deleteMany (source, options = {}) {\n    for await (const key of source) {\n      await this.delete(key, options)\n      yield key\n    }\n  }\n\n  /**\n   * @returns {Batch}\n   */\n  batch () {\n    /** @type {Pair[]} */\n    let puts = []\n    /** @type {Key[]} */\n    let dels = []\n\n    return {\n      put (key, value) {\n        puts.push({ key, value })\n      },\n\n      delete (key) {\n        dels.push(key)\n      },\n      commit: async (options) => {\n        await drain(this.putMany(puts, options))\n        puts = []\n        await drain(this.deleteMany(dels, options))\n        dels = []\n      }\n    }\n  }\n\n  /**\n   * Extending classes should override `query` or implement this method\n   *\n   * @param {Query} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Pair>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _all (q, options) {\n    throw new Error('._all is not implemented')\n  }\n\n  /**\n   * Extending classes should override `queryKeys` or implement this method\n   *\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   * @returns {AsyncIterable<Key>}\n   */\n  // eslint-disable-next-line require-yield\n  async * _allKeys (q, options) {\n    throw new Error('._allKeys is not implemented')\n  }\n\n  /**\n   * @param {Query} q\n   * @param {Options} [options]\n   */\n  query (q, options) {\n    let it = this._all(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (e) =>\n        e.key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n\n  /**\n   * @param {KeyQuery} q\n   * @param {Options} [options]\n   */\n  queryKeys (q, options) {\n    let it = this._allKeys(q, options)\n\n    if (q.prefix != null) {\n      it = filter(it, (key) =>\n        key.toString().startsWith(/** @type {string} */ (q.prefix))\n      )\n    }\n\n    if (Array.isArray(q.filters)) {\n      it = q.filters.reduce((it, f) => filter(it, f), it)\n    }\n\n    if (Array.isArray(q.orders)) {\n      it = q.orders.reduce((it, f) => sortAll(it, f), it)\n    }\n\n    if (q.offset != null) {\n      let i = 0\n      it = filter(it, () => i++ >= /** @type {number} */ (q.offset))\n    }\n\n    if (q.limit != null) {\n      it = take(it, q.limit)\n    }\n\n    return it\n  }\n}\n\nmodule.exports = Adapter\n"]},"metadata":{},"sourceType":"script"}