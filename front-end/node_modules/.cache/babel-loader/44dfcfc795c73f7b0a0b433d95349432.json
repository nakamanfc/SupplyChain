{"ast":null,"code":"'use strict';\n\nconst AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nconst inherits = require('inherits');\n\nconst DeferredIterator = require('./deferred-iterator');\n\nconst deferrables = 'put get del batch clear'.split(' ');\nconst optionalDeferrables = 'approximateSize compactRange'.split(' ');\n\nfunction DeferredLevelDOWN(db) {\n  AbstractLevelDOWN.call(this, db.supports || {}); // TODO (future major): remove this fallback; db must have manifest that\n  // declares approximateSize and compactRange in additionalMethods.\n\n  for (const m of optionalDeferrables) {\n    if (typeof db[m] === 'function' && !this.supports.additionalMethods[m]) {\n      this.supports.additionalMethods[m] = true;\n    }\n  }\n\n  this._db = db;\n  this._operations = [];\n  closed(this);\n}\n\ninherits(DeferredLevelDOWN, AbstractLevelDOWN);\nDeferredLevelDOWN.prototype.type = 'deferred-leveldown';\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  this._db.open(options, err => {\n    if (err) return callback(err);\n\n    for (const op of this._operations) {\n      if (op.iterator) {\n        op.iterator.setDb(this._db);\n      } else {\n        this._db[op.method](...op.args);\n      }\n    }\n\n    this._operations = [];\n    open(this);\n    callback();\n  });\n};\n\nDeferredLevelDOWN.prototype._close = function (callback) {\n  this._db.close(err => {\n    if (err) return callback(err);\n    closed(this);\n    callback();\n  });\n};\n\nfunction open(self) {\n  for (const m of deferrables.concat('iterator')) {\n    self['_' + m] = function (...args) {\n      return this._db[m](...args);\n    };\n  }\n\n  for (const m of Object.keys(self.supports.additionalMethods)) {\n    self[m] = function (...args) {\n      return this._db[m](...args);\n    };\n  }\n}\n\nfunction closed(self) {\n  for (const m of deferrables) {\n    self['_' + m] = function (...args) {\n      this._operations.push({\n        method: m,\n        args\n      });\n    };\n  }\n\n  for (const m of Object.keys(self.supports.additionalMethods)) {\n    self[m] = function (...args) {\n      this._operations.push({\n        method: m,\n        args\n      });\n    };\n  }\n\n  self._iterator = function (options) {\n    const it = new DeferredIterator(self, options);\n\n    this._operations.push({\n      iterator: it\n    });\n\n    return it;\n  };\n}\n\nDeferredLevelDOWN.prototype._serializeKey = function (key) {\n  return key;\n};\n\nDeferredLevelDOWN.prototype._serializeValue = function (value) {\n  return value;\n};\n\nmodule.exports = DeferredLevelDOWN;\nmodule.exports.DeferredIterator = DeferredIterator;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/deferred-leveldown/deferred-leveldown.js"],"names":["AbstractLevelDOWN","require","inherits","DeferredIterator","deferrables","split","optionalDeferrables","DeferredLevelDOWN","db","call","supports","m","additionalMethods","_db","_operations","closed","prototype","type","_open","options","callback","open","err","op","iterator","setDb","method","args","_close","close","self","concat","Object","keys","push","_iterator","it","_serializeKey","key","_serializeValue","value","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nconst inherits = require('inherits')\nconst DeferredIterator = require('./deferred-iterator')\nconst deferrables = 'put get del batch clear'.split(' ')\nconst optionalDeferrables = 'approximateSize compactRange'.split(' ')\n\nfunction DeferredLevelDOWN (db) {\n  AbstractLevelDOWN.call(this, db.supports || {})\n\n  // TODO (future major): remove this fallback; db must have manifest that\n  // declares approximateSize and compactRange in additionalMethods.\n  for (const m of optionalDeferrables) {\n    if (typeof db[m] === 'function' && !this.supports.additionalMethods[m]) {\n      this.supports.additionalMethods[m] = true\n    }\n  }\n\n  this._db = db\n  this._operations = []\n\n  closed(this)\n}\n\ninherits(DeferredLevelDOWN, AbstractLevelDOWN)\n\nDeferredLevelDOWN.prototype.type = 'deferred-leveldown'\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  this._db.open(options, (err) => {\n    if (err) return callback(err)\n\n    for (const op of this._operations) {\n      if (op.iterator) {\n        op.iterator.setDb(this._db)\n      } else {\n        this._db[op.method](...op.args)\n      }\n    }\n\n    this._operations = []\n\n    open(this)\n    callback()\n  })\n}\n\nDeferredLevelDOWN.prototype._close = function (callback) {\n  this._db.close((err) => {\n    if (err) return callback(err)\n    closed(this)\n    callback()\n  })\n}\n\nfunction open (self) {\n  for (const m of deferrables.concat('iterator')) {\n    self['_' + m] = function (...args) {\n      return this._db[m](...args)\n    }\n  }\n\n  for (const m of Object.keys(self.supports.additionalMethods)) {\n    self[m] = function (...args) {\n      return this._db[m](...args)\n    }\n  }\n}\n\nfunction closed (self) {\n  for (const m of deferrables) {\n    self['_' + m] = function (...args) {\n      this._operations.push({ method: m, args })\n    }\n  }\n\n  for (const m of Object.keys(self.supports.additionalMethods)) {\n    self[m] = function (...args) {\n      this._operations.push({ method: m, args })\n    }\n  }\n\n  self._iterator = function (options) {\n    const it = new DeferredIterator(self, options)\n    this._operations.push({ iterator: it })\n    return it\n  }\n}\n\nDeferredLevelDOWN.prototype._serializeKey = function (key) {\n  return key\n}\n\nDeferredLevelDOWN.prototype._serializeValue = function (value) {\n  return value\n}\n\nmodule.exports = DeferredLevelDOWN\nmodule.exports.DeferredIterator = DeferredIterator\n"]},"metadata":{},"sourceType":"script"}