{"ast":null,"code":"'use strict';\n\nconst AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nconst AbstractChainedBatch = require('abstract-leveldown').AbstractChainedBatch;\n\nconst AbstractIterator = require('abstract-leveldown').AbstractIterator;\n\nconst inherits = require('inherits');\n\nconst Codec = require('level-codec');\n\nconst EncodingError = require('level-errors').EncodingError;\n\nconst rangeMethods = ['approximateSize', 'compactRange'];\nmodule.exports = DB;\n\nfunction DB(db, opts) {\n  if (!(this instanceof DB)) return new DB(db, opts);\n  const manifest = db.supports || {};\n  const additionalMethods = manifest.additionalMethods || {};\n  AbstractLevelDOWN.call(this, manifest);\n  this.supports.encodings = true;\n  this.supports.additionalMethods = {};\n  rangeMethods.forEach(function (m) {\n    // TODO (future major): remove this fallback\n    const fallback = typeof db[m] === 'function';\n\n    if (additionalMethods[m] || fallback) {\n      this.supports.additionalMethods[m] = true;\n\n      this[m] = function (start, end, opts, cb) {\n        start = this.codec.encodeKey(start, opts);\n        end = this.codec.encodeKey(end, opts);\n        return this.db[m](start, end, opts, cb);\n      };\n    }\n  }, this);\n  opts = opts || {};\n  if (typeof opts.keyEncoding === 'undefined') opts.keyEncoding = 'utf8';\n  if (typeof opts.valueEncoding === 'undefined') opts.valueEncoding = 'utf8';\n  this.db = db;\n  this.codec = new Codec(opts);\n}\n\ninherits(DB, AbstractLevelDOWN);\nDB.prototype.type = 'encoding-down';\n\nDB.prototype._serializeKey = DB.prototype._serializeValue = function (datum) {\n  return datum;\n};\n\nDB.prototype._open = function (opts, cb) {\n  this.db.open(opts, cb);\n};\n\nDB.prototype._close = function (cb) {\n  this.db.close(cb);\n};\n\nDB.prototype._put = function (key, value, opts, cb) {\n  key = this.codec.encodeKey(key, opts);\n  value = this.codec.encodeValue(value, opts);\n  this.db.put(key, value, opts, cb);\n};\n\nDB.prototype._get = function (key, opts, cb) {\n  key = this.codec.encodeKey(key, opts);\n  opts.asBuffer = this.codec.valueAsBuffer(opts);\n  this.db.get(key, opts, (err, value) => {\n    if (err) return cb(err);\n\n    try {\n      value = this.codec.decodeValue(value, opts);\n    } catch (err) {\n      return cb(new EncodingError(err));\n    }\n\n    cb(null, value);\n  });\n};\n\nDB.prototype._del = function (key, opts, cb) {\n  key = this.codec.encodeKey(key, opts);\n  this.db.del(key, opts, cb);\n};\n\nDB.prototype._chainedBatch = function () {\n  return new Batch(this);\n};\n\nDB.prototype._batch = function (ops, opts, cb) {\n  ops = this.codec.encodeBatch(ops, opts);\n  this.db.batch(ops, opts, cb);\n};\n\nDB.prototype._iterator = function (opts) {\n  opts.keyAsBuffer = this.codec.keyAsBuffer(opts);\n  opts.valueAsBuffer = this.codec.valueAsBuffer(opts);\n  return new Iterator(this, opts);\n};\n\nDB.prototype._clear = function (opts, callback) {\n  opts = this.codec.encodeLtgt(opts);\n  this.db.clear(opts, callback);\n};\n\nfunction Iterator(db, opts) {\n  AbstractIterator.call(this, db);\n  this.codec = db.codec;\n  this.keys = opts.keys;\n  this.values = opts.values;\n  this.opts = this.codec.encodeLtgt(opts);\n  this.it = db.db.iterator(this.opts);\n}\n\ninherits(Iterator, AbstractIterator);\n\nIterator.prototype._next = function (cb) {\n  this.it.next((err, key, value) => {\n    if (err) return cb(err);\n\n    try {\n      if (this.keys && typeof key !== 'undefined') {\n        key = this.codec.decodeKey(key, this.opts);\n      } else {\n        key = undefined;\n      }\n\n      if (this.values && typeof value !== 'undefined') {\n        value = this.codec.decodeValue(value, this.opts);\n      } else {\n        value = undefined;\n      }\n    } catch (err) {\n      return cb(new EncodingError(err));\n    }\n\n    cb(null, key, value);\n  });\n};\n\nIterator.prototype._seek = function (key) {\n  key = this.codec.encodeKey(key, this.opts);\n  this.it.seek(key);\n};\n\nIterator.prototype._end = function (cb) {\n  this.it.end(cb);\n};\n\nfunction Batch(db, codec) {\n  AbstractChainedBatch.call(this, db);\n  this.codec = db.codec;\n  this.batch = db.db.batch();\n}\n\ninherits(Batch, AbstractChainedBatch);\n\nBatch.prototype._put = function (key, value, options) {\n  key = this.codec.encodeKey(key, options);\n  value = this.codec.encodeValue(value, options);\n  this.batch.put(key, value);\n};\n\nBatch.prototype._del = function (key, options) {\n  key = this.codec.encodeKey(key, options);\n  this.batch.del(key);\n};\n\nBatch.prototype._clear = function () {\n  this.batch.clear();\n};\n\nBatch.prototype._write = function (opts, cb) {\n  this.batch.write(opts, cb);\n};","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/encoding-down/index.js"],"names":["AbstractLevelDOWN","require","AbstractChainedBatch","AbstractIterator","inherits","Codec","EncodingError","rangeMethods","module","exports","DB","db","opts","manifest","supports","additionalMethods","call","encodings","forEach","m","fallback","start","end","cb","codec","encodeKey","keyEncoding","valueEncoding","prototype","type","_serializeKey","_serializeValue","datum","_open","open","_close","close","_put","key","value","encodeValue","put","_get","asBuffer","valueAsBuffer","get","err","decodeValue","_del","del","_chainedBatch","Batch","_batch","ops","encodeBatch","batch","_iterator","keyAsBuffer","Iterator","_clear","callback","encodeLtgt","clear","keys","values","it","iterator","_next","next","decodeKey","undefined","_seek","seek","_end","options","_write","write"],"mappings":"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","sourcesContent":["'use strict'\n\nconst AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\nconst AbstractChainedBatch = require('abstract-leveldown').AbstractChainedBatch\nconst AbstractIterator = require('abstract-leveldown').AbstractIterator\nconst inherits = require('inherits')\nconst Codec = require('level-codec')\nconst EncodingError = require('level-errors').EncodingError\nconst rangeMethods = ['approximateSize', 'compactRange']\n\nmodule.exports = DB\n\nfunction DB (db, opts) {\n  if (!(this instanceof DB)) return new DB(db, opts)\n\n  const manifest = db.supports || {}\n  const additionalMethods = manifest.additionalMethods || {}\n\n  AbstractLevelDOWN.call(this, manifest)\n\n  this.supports.encodings = true\n  this.supports.additionalMethods = {}\n\n  rangeMethods.forEach(function (m) {\n    // TODO (future major): remove this fallback\n    const fallback = typeof db[m] === 'function'\n\n    if (additionalMethods[m] || fallback) {\n      this.supports.additionalMethods[m] = true\n\n      this[m] = function (start, end, opts, cb) {\n        start = this.codec.encodeKey(start, opts)\n        end = this.codec.encodeKey(end, opts)\n        return this.db[m](start, end, opts, cb)\n      }\n    }\n  }, this)\n\n  opts = opts || {}\n  if (typeof opts.keyEncoding === 'undefined') opts.keyEncoding = 'utf8'\n  if (typeof opts.valueEncoding === 'undefined') opts.valueEncoding = 'utf8'\n\n  this.db = db\n  this.codec = new Codec(opts)\n}\n\ninherits(DB, AbstractLevelDOWN)\n\nDB.prototype.type = 'encoding-down'\n\nDB.prototype._serializeKey =\nDB.prototype._serializeValue = function (datum) {\n  return datum\n}\n\nDB.prototype._open = function (opts, cb) {\n  this.db.open(opts, cb)\n}\n\nDB.prototype._close = function (cb) {\n  this.db.close(cb)\n}\n\nDB.prototype._put = function (key, value, opts, cb) {\n  key = this.codec.encodeKey(key, opts)\n  value = this.codec.encodeValue(value, opts)\n  this.db.put(key, value, opts, cb)\n}\n\nDB.prototype._get = function (key, opts, cb) {\n  key = this.codec.encodeKey(key, opts)\n  opts.asBuffer = this.codec.valueAsBuffer(opts)\n\n  this.db.get(key, opts, (err, value) => {\n    if (err) return cb(err)\n\n    try {\n      value = this.codec.decodeValue(value, opts)\n    } catch (err) {\n      return cb(new EncodingError(err))\n    }\n\n    cb(null, value)\n  })\n}\n\nDB.prototype._del = function (key, opts, cb) {\n  key = this.codec.encodeKey(key, opts)\n  this.db.del(key, opts, cb)\n}\n\nDB.prototype._chainedBatch = function () {\n  return new Batch(this)\n}\n\nDB.prototype._batch = function (ops, opts, cb) {\n  ops = this.codec.encodeBatch(ops, opts)\n  this.db.batch(ops, opts, cb)\n}\n\nDB.prototype._iterator = function (opts) {\n  opts.keyAsBuffer = this.codec.keyAsBuffer(opts)\n  opts.valueAsBuffer = this.codec.valueAsBuffer(opts)\n  return new Iterator(this, opts)\n}\n\nDB.prototype._clear = function (opts, callback) {\n  opts = this.codec.encodeLtgt(opts)\n  this.db.clear(opts, callback)\n}\n\nfunction Iterator (db, opts) {\n  AbstractIterator.call(this, db)\n  this.codec = db.codec\n  this.keys = opts.keys\n  this.values = opts.values\n  this.opts = this.codec.encodeLtgt(opts)\n  this.it = db.db.iterator(this.opts)\n}\n\ninherits(Iterator, AbstractIterator)\n\nIterator.prototype._next = function (cb) {\n  this.it.next((err, key, value) => {\n    if (err) return cb(err)\n\n    try {\n      if (this.keys && typeof key !== 'undefined') {\n        key = this.codec.decodeKey(key, this.opts)\n      } else {\n        key = undefined\n      }\n\n      if (this.values && typeof value !== 'undefined') {\n        value = this.codec.decodeValue(value, this.opts)\n      } else {\n        value = undefined\n      }\n    } catch (err) {\n      return cb(new EncodingError(err))\n    }\n\n    cb(null, key, value)\n  })\n}\n\nIterator.prototype._seek = function (key) {\n  key = this.codec.encodeKey(key, this.opts)\n  this.it.seek(key)\n}\n\nIterator.prototype._end = function (cb) {\n  this.it.end(cb)\n}\n\nfunction Batch (db, codec) {\n  AbstractChainedBatch.call(this, db)\n  this.codec = db.codec\n  this.batch = db.db.batch()\n}\n\ninherits(Batch, AbstractChainedBatch)\n\nBatch.prototype._put = function (key, value, options) {\n  key = this.codec.encodeKey(key, options)\n  value = this.codec.encodeValue(value, options)\n  this.batch.put(key, value)\n}\n\nBatch.prototype._del = function (key, options) {\n  key = this.codec.encodeKey(key, options)\n  this.batch.del(key)\n}\n\nBatch.prototype._clear = function () {\n  this.batch.clear()\n}\n\nBatch.prototype._write = function (opts, cb) {\n  this.batch.write(opts, cb)\n}\n"]},"metadata":{},"sourceType":"script"}