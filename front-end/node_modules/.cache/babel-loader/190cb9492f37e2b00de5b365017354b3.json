{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\mew-supplychain\\\\front-end\\\\src\\\\Component\\\\CompanyPage\\\\CompanyBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../../Style/CompanyBody.css';\nimport CompanyProfile from './CompanyProflie';\nimport CompanyManage from './CompanyManage';\nimport WebThree from '../../Function/WebThree';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CompanyBody() {\n  _s();\n\n  const [db, setDb] = useState([]);\n  const [staffNum, setStaffNum] = useState('0');\n  const [workNum, setWorkNum] = useState('0');\n\n  async function getData() {\n    await fetch(`http://localhost:5000/company/${localStorage.getItem('account')}`).then(res => res.json()).then(res => {\n      setDb(res[0]);\n\n      if (res[0].id == null) {\n        addToBlockchain();\n      }\n    });\n  }\n\n  function puthData(id, txhash) {\n    const requestOptions = {\n      method: 'put',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id: id,\n        txhash: txhash,\n        address: localStorage.getItem('account')\n      })\n    };\n    fetch(\"http://localhost:5000/company\", requestOptions);\n    console.log(\"puthData\", id, txhash);\n  }\n\n  async function addToBlockchain() {\n    WebThree.setAccount(localStorage.getItem('key'));\n    await WebThree.companyContract().methods.CreateCompany().send({\n      from: `${localStorage.getItem('account')}`,\n      gasPrice: 0,\n      gas: 200000\n    }).on('receipt', function (receipt) {\n      puthData(receipt.events.NewEvent.returnValues.ID, receipt.transactionHash);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"companybody-container\",\n    children: db.name != null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CompanyProfile, {\n        db: db,\n        staffNum: staffNum\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CompanyManage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyBody, \"NILuKVhGNxaabf6POoWs9DXo8cI=\");\n\n_c = CompanyBody;\nexport default CompanyBody;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyBody\");","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/src/Component/CompanyPage/CompanyBody.js"],"names":["React","useEffect","useState","CompanyProfile","CompanyManage","WebThree","CompanyBody","db","setDb","staffNum","setStaffNum","workNum","setWorkNum","getData","fetch","localStorage","getItem","then","res","json","id","addToBlockchain","puthData","txhash","requestOptions","method","headers","body","JSON","stringify","address","console","log","setAccount","companyContract","methods","CreateCompany","send","from","gasPrice","gas","on","receipt","events","NewEvent","returnValues","ID","transactionHash","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,6BAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;;AAEA,SAASC,WAAT,GAAuB;AAAA;;AACnB,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,GAAD,CAAxC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,GAAD,CAAtC;;AAEA,iBAAeW,OAAf,GAAwB;AACpB,UAAMC,KAAK,CAAE,iCAAgCC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,EAAlE,CAAL,CACLC,IADK,CACAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADP,EAELF,IAFK,CAEAC,GAAG,IAAI;AACTV,MAAAA,KAAK,CAACU,GAAG,CAAC,CAAD,CAAJ,CAAL;;AACA,UAAGA,GAAG,CAAC,CAAD,CAAH,CAAOE,EAAP,IAAa,IAAhB,EAAqB;AACjBC,QAAAA,eAAe;AAClB;AACJ,KAPK,CAAN;AAQH;;AACD,WAASC,QAAT,CAAkBF,EAAlB,EAAqBG,MAArB,EAA4B;AACxB,UAAMC,cAAc,GAAG;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFU;AAGnBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACT,QAAAA,EAAE,EAACA,EAAJ;AAAOG,QAAAA,MAAM,EAACA,MAAd;AAAqBO,QAAAA,OAAO,EAACf,YAAY,CAACC,OAAb,CAAqB,SAArB;AAA7B,OAAf;AAHa,KAAvB;AAKAF,IAAAA,KAAK,CAAC,+BAAD,EAAkCU,cAAlC,CAAL;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBZ,EAAxB,EAA4BG,MAA5B;AACH;;AACD,iBAAeF,eAAf,GAAgC;AACxBhB,IAAAA,QAAQ,CAAC4B,UAAT,CAAoBlB,YAAY,CAACC,OAAb,CAAqB,KAArB,CAApB;AACA,UAAMX,QAAQ,CAAC6B,eAAT,GAA2BC,OAA3B,CAAmCC,aAAnC,GAAmDC,IAAnD,CAAwD;AAACC,MAAAA,IAAI,EAAG,GAAEvB,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC,EAA1C;AAA6CuB,MAAAA,QAAQ,EAAC,CAAtD;AAAyDC,MAAAA,GAAG,EAAC;AAA7D,KAAxD,EAA8HC,EAA9H,CAAiI,SAAjI,EAA4I,UAASC,OAAT,EAAiB;AAACpB,MAAAA,QAAQ,CAACoB,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAwBC,YAAxB,CAAqCC,EAAtC,EAAyCJ,OAAO,CAACK,eAAjD,CAAR;AAA0E,KAAxO,CAAN;AACP;;AAED9C,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA,cACKN,EAAE,CAACyC,IAAH,IAAW,IAAX,gBAEG;AAAA,8BACI,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAEzC,EAApB;AAAwB,QAAA,QAAQ,EAAEE;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,oBAFH,gBAME;AAPP;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA3CQH,W;;KAAAA,W;AA6CT,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../../Style/CompanyBody.css'\r\nimport CompanyProfile from './CompanyProflie'\r\nimport CompanyManage from './CompanyManage'\r\nimport WebThree from '../../Function/WebThree'\r\n\r\nfunction CompanyBody() {\r\n    const [db, setDb] = useState([])\r\n    const [staffNum, setStaffNum] = useState('0')\r\n    const [workNum, setWorkNum] = useState('0')\r\n\r\n    async function getData(){\r\n        await fetch(`http://localhost:5000/company/${localStorage.getItem('account')}`)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            setDb(res[0]);\r\n            if(res[0].id == null){\r\n                addToBlockchain()\r\n            }\r\n        })\r\n    }\r\n    function puthData(id,txhash){\r\n        const requestOptions = {\r\n            method: 'put',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({id:id,txhash:txhash,address:localStorage.getItem('account')})\r\n        };\r\n        fetch(\"http://localhost:5000/company\", requestOptions)\r\n        console.log(\"puthData\", id, txhash)\r\n    }\r\n    async function addToBlockchain(){\r\n            WebThree.setAccount(localStorage.getItem('key'))\r\n            await WebThree.companyContract().methods.CreateCompany().send({from: `${localStorage.getItem('account')}`, gasPrice:0, gas:200000}).on('receipt', function(receipt){puthData(receipt.events.NewEvent.returnValues.ID,receipt.transactionHash)});\r\n    }\r\n\r\n    useEffect(() => {\r\n        getData()\r\n    }, [])\r\n    return (\r\n        <div className='companybody-container'>\r\n            {db.name != null ?\r\n            (\r\n                <>\r\n                    <CompanyProfile db={db} staffNum={staffNum} />\r\n                    <CompanyManage/>\r\n                </>\r\n            ):(<></>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompanyBody\r\n"]},"metadata":{},"sourceType":"module"}