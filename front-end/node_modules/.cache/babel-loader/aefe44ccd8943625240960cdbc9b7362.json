{"ast":null,"code":"'use strict';\n\nconst WriteError = require('level-errors').WriteError;\n\nconst catering = require('catering');\n\nconst getCallback = require('./common').getCallback;\n\nconst getOptions = require('./common').getOptions;\n\nfunction Batch(levelup) {\n  this.db = levelup;\n  this.batch = levelup.db.batch();\n  this.ops = [];\n  this.length = 0;\n}\n\nBatch.prototype.put = function (key, value, options) {\n  try {\n    this.batch.put(key, value, options);\n  } catch (e) {\n    throw new WriteError(e);\n  }\n\n  this.ops.push({ ...options,\n    type: 'put',\n    key,\n    value\n  });\n  this.length++;\n  return this;\n};\n\nBatch.prototype.del = function (key, options) {\n  try {\n    this.batch.del(key, options);\n  } catch (err) {\n    throw new WriteError(err);\n  }\n\n  this.ops.push({ ...options,\n    type: 'del',\n    key\n  });\n  this.length++;\n  return this;\n};\n\nBatch.prototype.clear = function () {\n  try {\n    this.batch.clear();\n  } catch (err) {\n    throw new WriteError(err);\n  }\n\n  this.ops = [];\n  this.length = 0;\n  return this;\n};\n\nBatch.prototype.write = function (options, callback) {\n  const levelup = this.db;\n  const ops = this.ops;\n  callback = getCallback(options, callback);\n  callback = catering.fromCallback(callback);\n  options = getOptions(options);\n\n  try {\n    this.batch.write(options, function (err) {\n      if (err) {\n        return callback(new WriteError(err));\n      }\n\n      levelup.emit('batch', ops);\n      callback();\n    });\n  } catch (err) {\n    throw new WriteError(err);\n  }\n\n  return callback.promise;\n};\n\nmodule.exports = Batch;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/levelup/lib/batch.js"],"names":["WriteError","require","catering","getCallback","getOptions","Batch","levelup","db","batch","ops","length","prototype","put","key","value","options","e","push","type","del","err","clear","write","callback","fromCallback","emit","promise","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nconst WriteError = require('level-errors').WriteError\nconst catering = require('catering')\nconst getCallback = require('./common').getCallback\nconst getOptions = require('./common').getOptions\n\nfunction Batch (levelup) {\n  this.db = levelup\n  this.batch = levelup.db.batch()\n  this.ops = []\n  this.length = 0\n}\n\nBatch.prototype.put = function (key, value, options) {\n  try {\n    this.batch.put(key, value, options)\n  } catch (e) {\n    throw new WriteError(e)\n  }\n\n  this.ops.push({ ...options, type: 'put', key, value })\n  this.length++\n\n  return this\n}\n\nBatch.prototype.del = function (key, options) {\n  try {\n    this.batch.del(key, options)\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  this.ops.push({ ...options, type: 'del', key })\n  this.length++\n\n  return this\n}\n\nBatch.prototype.clear = function () {\n  try {\n    this.batch.clear()\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  this.ops = []\n  this.length = 0\n\n  return this\n}\n\nBatch.prototype.write = function (options, callback) {\n  const levelup = this.db\n  const ops = this.ops\n\n  callback = getCallback(options, callback)\n  callback = catering.fromCallback(callback)\n  options = getOptions(options)\n\n  try {\n    this.batch.write(options, function (err) {\n      if (err) { return callback(new WriteError(err)) }\n      levelup.emit('batch', ops)\n      callback()\n    })\n  } catch (err) {\n    throw new WriteError(err)\n  }\n\n  return callback.promise\n}\n\nmodule.exports = Batch\n"]},"metadata":{},"sourceType":"script"}