{"ast":null,"code":"'use strict';\n\nvar cid = require('multiformats/cid');\n\nvar errCode = require('err-code');\n\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\n\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\n\nconst resolve = async (cid$1, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid$1);\n  const object = dagCbor__namespace.decode(block);\n  let subObject = object;\n  let subPath = path;\n\n  while (toResolve.length) {\n    const prop = toResolve[0];\n\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${subPath}/${prop}`;\n      const subObjectCid = cid.CID.asCID(subObject[prop]);\n\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid: cid$1,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n\n      subObject = subObject[prop];\n    } else {\n      throw errCode__default['default'](new Error(`No property named ${prop} found in cbor node ${cid$1}`), 'ERR_NO_PROP');\n    }\n  }\n\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid: cid$1,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\n\nmodule.exports = resolve;","map":{"version":3,"sources":["C:/Users/user/mew-supplychain/front-end/node_modules/ipfs-unixfs-exporter/cjs/src/resolvers/dag-cbor.js"],"names":["cid","require","errCode","dagCbor","_interopDefaultLegacy","e","_interopNamespace","__esModule","n","Object","create","keys","forEach","k","d","getOwnPropertyDescriptor","defineProperty","get","enumerable","freeze","errCode__default","dagCbor__namespace","resolve","cid$1","name","path","toResolve","depth","blockstore","options","block","object","decode","subObject","subPath","length","prop","shift","subObjectCid","CID","asCID","entry","type","node","size","content","next","Error","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar cid = require('multiformats/cid');\nvar errCode = require('err-code');\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nfunction _interopNamespace(e) {\n  if (e && e.__esModule) return e;\n  var n = Object.create(null);\n  if (e) {\n    Object.keys(e).forEach(function (k) {\n      if (k !== 'default') {\n        var d = Object.getOwnPropertyDescriptor(e, k);\n        Object.defineProperty(n, k, d.get ? d : {\n          enumerable: true,\n          get: function () {\n            return e[k];\n          }\n        });\n      }\n    });\n  }\n  n['default'] = e;\n  return Object.freeze(n);\n}\n\nvar errCode__default = /*#__PURE__*/_interopDefaultLegacy(errCode);\nvar dagCbor__namespace = /*#__PURE__*/_interopNamespace(dagCbor);\n\nconst resolve = async (cid$1, name, path, toResolve, resolve, depth, blockstore, options) => {\n  const block = await blockstore.get(cid$1);\n  const object = dagCbor__namespace.decode(block);\n  let subObject = object;\n  let subPath = path;\n  while (toResolve.length) {\n    const prop = toResolve[0];\n    if (prop in subObject) {\n      toResolve.shift();\n      subPath = `${ subPath }/${ prop }`;\n      const subObjectCid = cid.CID.asCID(subObject[prop]);\n      if (subObjectCid) {\n        return {\n          entry: {\n            type: 'object',\n            name,\n            path,\n            cid: cid$1,\n            node: block,\n            depth,\n            size: block.length,\n            content: async function* () {\n              yield object;\n            }\n          },\n          next: {\n            cid: subObjectCid,\n            name: prop,\n            path: subPath,\n            toResolve\n          }\n        };\n      }\n      subObject = subObject[prop];\n    } else {\n      throw errCode__default['default'](new Error(`No property named ${ prop } found in cbor node ${ cid$1 }`), 'ERR_NO_PROP');\n    }\n  }\n  return {\n    entry: {\n      type: 'object',\n      name,\n      path,\n      cid: cid$1,\n      node: block,\n      depth,\n      size: block.length,\n      content: async function* () {\n        yield object;\n      }\n    }\n  };\n};\n\nmodule.exports = resolve;\n"]},"metadata":{},"sourceType":"script"}